{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/limengyu/Desktop/private/code/project/show-codes/components/Dropdown.js\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Downshift from 'downshift';\nimport { matchSorter } from 'match-sorter';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { Down as ArrowDown } from './svg/Arrows';\nimport CheckMark from './svg/Checkmark';\nimport { COLORS } from '../lib/constants';\n\nclass Dropdown extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      inputValue: this.props.selected.name,\n      itemsToShow: this.props.list\n    });\n\n    _defineProperty(this, \"onUserAction\", changes => {\n      this.setState(({\n        inputValue,\n        itemsToShow\n      }) => {\n        if (Object.prototype.hasOwnProperty.call(changes, 'inputValue')) {\n          if (changes.type === Downshift.stateChangeTypes.keyDownEscape) {\n            inputValue = this.userInputtedValue;\n          } else if (changes.type === Downshift.stateChangeTypes.changeInput) {\n            inputValue = changes.inputValue;\n            this.userInputtedValue = changes.inputValue;\n          } else {\n            inputValue = changes.inputValue;\n          }\n        }\n\n        itemsToShow = this.userInputtedValue ? matchSorter(this.props.list, this.userInputtedValue, {\n          keys: ['name']\n        }) : this.props.list;\n\n        if (Object.prototype.hasOwnProperty.call(changes, 'highlightedIndex') && (changes.type === Downshift.stateChangeTypes.keyDownArrowUp || changes.type === Downshift.stateChangeTypes.keyDownArrowDown)) {\n          inputValue = itemsToShow[changes.highlightedIndex].name;\n          this.props.onChange(itemsToShow[changes.highlightedIndex]);\n        }\n\n        if (Object.prototype.hasOwnProperty.call(changes, 'isOpen')) {\n          this.userInputtedValue = ''; // clear on open\n\n          if (changes.isOpen) {\n            inputValue = '';\n            this.props.onOpen && this.props.onOpen();\n          } else if (changes.isOpen === false && !inputValue) {\n            // set on close\n            inputValue = this.props.selected.name;\n          }\n        }\n\n        return {\n          inputValue,\n          itemsToShow\n        };\n      });\n    });\n\n    _defineProperty(this, \"userInputtedValue\", '');\n  }\n\n  render() {\n    const {\n      innerRef,\n      color,\n      selected,\n      onChange,\n      itemWrapper,\n      icon,\n      disableInput,\n      title\n    } = this.props;\n    const {\n      itemsToShow,\n      inputValue\n    } = this.state;\n    const labelId = title ? `${title.toLowerCase()}-dropdown` : undefined;\n    return /*#__PURE__*/_jsxDEV(Downshift, {\n      ref: innerRef,\n      inputValue: inputValue,\n      selectedItem: selected,\n      defaultHighlightedIndex: itemsToShow.findIndex(it => it === selected),\n      itemToString: item => item.name,\n      onChange: onChange,\n      onUserAction: this.onUserAction,\n      labelId: labelId,\n      children: renderDropdown({\n        color,\n        list: itemsToShow,\n        selected,\n        itemWrapper,\n        icon,\n        disableInput,\n        title,\n        labelId\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst renderDropdown = ({\n  color,\n  list,\n  itemWrapper,\n  icon,\n  disableInput,\n  title,\n  labelId\n}) => ({\n  isOpen,\n  highlightedIndex,\n  selectedItem,\n  getRootProps,\n  getToggleButtonProps,\n  getInputProps,\n  getItemProps\n}) => {\n  return /*#__PURE__*/_jsxDEV(DropdownContainer, _objectSpread(_objectSpread({}, getRootProps({\n    refKey: 'innerRef'\n  })), {}, {\n    children: [title && /*#__PURE__*/_jsxDEV(VisuallyHidden, {\n      id: labelId,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DropdownIcon, {\n      isOpen: isOpen,\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectedItem, {\n      getToggleButtonProps: getToggleButtonProps,\n      getInputProps: getInputProps,\n      isOpen: isOpen,\n      color: color,\n      hasIcon: !!icon,\n      disabled: disableInput,\n      children: selectedItem.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(ListItems, {\n      color: color,\n      children: list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, _objectSpread(_objectSpread({\n        color: color,\n        item: item,\n        itemWrapper: itemWrapper\n      }, getItemProps({\n        item,\n        isSelected: selectedItem.name === item.name,\n        isHighlighted: highlightedIndex === index\n      })), {}, {\n        children: item.name\n      }), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this) : null]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\nconst DropdownContainer = (_ref) => {\n  let {\n    children,\n    innerRef\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"innerRef\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, rest), {}, {\n    ref: innerRef,\n    className: \"jsx-3624623522\" + \" \" + \"dropdown-container\",\n    children: [children, /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3624623522\",\n      children: \".dropdown-container.jsx-3624623522{position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin-left:40px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Dropdown.js */\"\n    }, void 0, false, void 0, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n\nconst DropdownIcon = ({\n  children,\n  isOpen\n}) => {\n  if (children) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"130924655\", [isOpen ? 38 : 39, isOpen ? 2 : 1]]]) + \" \" + \"dropdown-icon\",\n      children: [children, /*#__PURE__*/_jsxDEV(_JSXStyle, {\n        id: \"130924655\",\n        dynamic: [isOpen ? 38 : 39, isOpen ? 2 : 1],\n        children: `.dropdown-icon.__jsx-style-dynamic-selector{position:absolute;left:-${isOpen ? 38 : 39}px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;width:40px;height:40px;box-shadow:inset 0px 0px 0px ${isOpen ? 2 : 1}px white;border-radius:3px 0 0 3px;cursor:initial;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Dropdown.js */`\n      }, void 0, false, void 0, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  } else {\n    return null;\n  }\n};\n\nconst SelectedItem = ({\n  getToggleButtonProps,\n  getInputProps,\n  children,\n  isOpen,\n  color,\n  hasIcon,\n  disabled\n}) => {\n  const itemColor = color || COLORS.SECONDARY;\n  return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, getToggleButtonProps({\n    tabIndex: 0\n  })), {}, {\n    \"data-cy\": \"theme-selector-button\",\n    className: _JSXStyle.dynamic([[\"1454468638\", [itemColor, hasIcon ? '0 3px 3px 0' : '3px', COLORS.HOVER, hasIcon ? '0 3px 0 0' : '3px 3px 0 0', itemColor, itemColor]]]) + \" \" + `dropdown-display ${isOpen ? 'is-open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, getInputProps({\n      placeholder: children,\n      id: `downshift-input-${children}`,\n      disabled\n    })), {}, {\n      spellCheck: false,\n      className: _JSXStyle.dynamic([[\"1454468638\", [itemColor, hasIcon ? '0 3px 3px 0' : '3px', COLORS.HOVER, hasIcon ? '0 3px 0 0' : '3px 3px 0 0', itemColor, itemColor]]]) + \" \" + \"dropdown-display-text\"\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"1454468638\", [itemColor, hasIcon ? '0 3px 3px 0' : '3px', COLORS.HOVER, hasIcon ? '0 3px 0 0' : '3px 3px 0 0', itemColor, itemColor]]]) + \" \" + \"dropdown-arrow\",\n      children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n        color: itemColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1454468638\",\n      dynamic: [itemColor, hasIcon ? '0 3px 3px 0' : '3px', COLORS.HOVER, hasIcon ? '0 3px 0 0' : '3px 3px 0 0', itemColor, itemColor],\n      children: `.dropdown-display.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:40px;padding:0 16px;box-shadow:inset 0px 0px 0px 1px ${itemColor};border-radius:${hasIcon ? '0 3px 3px 0' : '3px'};outline:none;}.dropdown-display.__jsx-style-dynamic-selector:hover,.dropdown-display.__jsx-style-dynamic-selector:focus{background:${COLORS.HOVER};}.dropdown-display.is-open.__jsx-style-dynamic-selector{border-radius:${hasIcon ? '0 3px 0 0' : '3px 3px 0 0'};box-shadow:inset 0px 0px 0px 2px ${itemColor};}.dropdown-display-text.__jsx-style-dynamic-selector{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;color:${itemColor};background:transparent;border:none;outline:none;font-size:inherit;font-family:inherit;}.dropdown-arrow.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.is-open.__jsx-style-dynamic-selector>.dropdown-arrow.__jsx-style-dynamic-selector{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg);}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Dropdown.js */`\n    }, void 0, false, void 0, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n\nconst ListItems = ({\n  children,\n  color\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    role: \"listbox\",\n    className: _JSXStyle.dynamic([[\"1188856458\", [color || COLORS.SECONDARY]]]) + \" \" + \"dropdown-list\",\n    children: [children, /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1188856458\",\n      dynamic: [color || COLORS.SECONDARY],\n      children: `.dropdown-list.__jsx-style-dynamic-selector{margin-top:-2px;border:2px solid ${color || COLORS.SECONDARY};border-radius:0 0 3px 3px;max-height:350px;overflow-y:scroll;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Dropdown.js */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n\nconst ListItem = (_ref2) => {\n  let {\n    children,\n    color,\n    isHighlighted,\n    isSelected,\n    itemWrapper,\n    item\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"children\", \"color\", \"isHighlighted\", \"isSelected\", \"itemWrapper\", \"item\"]);\n\n  const itemColor = color || COLORS.SECONDARY;\n  return /*#__PURE__*/_jsxDEV(\"li\", _objectSpread(_objectSpread({}, rest), {}, {\n    \"data-cy\": \"dropdown-item\",\n    className: _JSXStyle.dynamic([[\"3682618742\", [isHighlighted ? COLORS.HOVER : COLORS.BLACK, itemColor, COLORS.HOVER, itemColor]]]) + \" \" + \"dropdown-list-item\",\n    children: [itemWrapper ? itemWrapper({\n      children,\n      color: itemColor,\n      item,\n      isSelected\n    }) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: _JSXStyle.dynamic([[\"3682618742\", [isHighlighted ? COLORS.HOVER : COLORS.BLACK, itemColor, COLORS.HOVER, itemColor]]]) + \" \" + \"dropdown-list-item-text\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), isSelected ? /*#__PURE__*/_jsxDEV(CheckMark, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3682618742\",\n      dynamic: [isHighlighted ? COLORS.HOVER : COLORS.BLACK, itemColor, COLORS.HOVER, itemColor],\n      children: `.dropdown-list-item.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background:${isHighlighted ? COLORS.HOVER : COLORS.BLACK};padding:8px 16px;border-bottom:1px solid ${itemColor};}.dropdown-list-item.__jsx-style-dynamic-selector:last-child{border-bottom:none;}.dropdown-list-item.__jsx-style-dynamic-selector:hover{background:${COLORS.HOVER};}.dropdown-list-item-text.__jsx-style-dynamic-selector{-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;color:${itemColor};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Dropdown.js */`\n    }, void 0, false, void 0, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/components/Dropdown.js"],"names":["React","Downshift","matchSorter","VisuallyHidden","Down","ArrowDown","CheckMark","COLORS","Dropdown","PureComponent","inputValue","props","selected","name","itemsToShow","list","changes","setState","Object","prototype","hasOwnProperty","call","type","stateChangeTypes","keyDownEscape","userInputtedValue","changeInput","keys","keyDownArrowUp","keyDownArrowDown","highlightedIndex","onChange","isOpen","onOpen","render","innerRef","color","itemWrapper","icon","disableInput","title","state","labelId","toLowerCase","undefined","findIndex","it","item","onUserAction","renderDropdown","selectedItem","getRootProps","getToggleButtonProps","getInputProps","getItemProps","refKey","map","index","isSelected","isHighlighted","DropdownContainer","children","rest","DropdownIcon","SelectedItem","hasIcon","disabled","itemColor","SECONDARY","tabIndex","HOVER","placeholder","id","ListItems","ListItem","BLACK"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Downshift from 'downshift'\nimport { matchSorter } from 'match-sorter'\nimport VisuallyHidden from '@reach/visually-hidden'\nimport { Down as ArrowDown } from './svg/Arrows'\nimport CheckMark from './svg/Checkmark'\nimport { COLORS } from '../lib/constants'\n\nclass Dropdown extends React.PureComponent {\n  state = {\n    inputValue: this.props.selected.name,\n    itemsToShow: this.props.list,\n  }\n\n  onUserAction = changes => {\n    this.setState(({ inputValue, itemsToShow }) => {\n      if (Object.prototype.hasOwnProperty.call(changes, 'inputValue')) {\n        if (changes.type === Downshift.stateChangeTypes.keyDownEscape) {\n          inputValue = this.userInputtedValue\n        } else if (changes.type === Downshift.stateChangeTypes.changeInput) {\n          inputValue = changes.inputValue\n          this.userInputtedValue = changes.inputValue\n        } else {\n          inputValue = changes.inputValue\n        }\n      }\n\n      itemsToShow = this.userInputtedValue\n        ? matchSorter(this.props.list, this.userInputtedValue, { keys: ['name'] })\n        : this.props.list\n\n      if (\n        Object.prototype.hasOwnProperty.call(changes, 'highlightedIndex') &&\n        (changes.type === Downshift.stateChangeTypes.keyDownArrowUp ||\n          changes.type === Downshift.stateChangeTypes.keyDownArrowDown)\n      ) {\n        inputValue = itemsToShow[changes.highlightedIndex].name\n        this.props.onChange(itemsToShow[changes.highlightedIndex])\n      }\n\n      if (Object.prototype.hasOwnProperty.call(changes, 'isOpen')) {\n        this.userInputtedValue = ''\n\n        // clear on open\n        if (changes.isOpen) {\n          inputValue = ''\n          this.props.onOpen && this.props.onOpen()\n        } else if (changes.isOpen === false && !inputValue) {\n          // set on close\n          inputValue = this.props.selected.name\n        }\n      }\n\n      return { inputValue, itemsToShow }\n    })\n  }\n\n  userInputtedValue = ''\n\n  render() {\n    const {\n      innerRef,\n      color,\n      selected,\n      onChange,\n      itemWrapper,\n      icon,\n      disableInput,\n      title,\n    } = this.props\n    const { itemsToShow, inputValue } = this.state\n\n    const labelId = title ? `${title.toLowerCase()}-dropdown` : undefined\n\n    return (\n      <Downshift\n        ref={innerRef}\n        inputValue={inputValue}\n        selectedItem={selected}\n        defaultHighlightedIndex={itemsToShow.findIndex(it => it === selected)}\n        itemToString={item => item.name}\n        onChange={onChange}\n        onUserAction={this.onUserAction}\n        labelId={labelId}\n      >\n        {renderDropdown({\n          color,\n          list: itemsToShow,\n          selected,\n          itemWrapper,\n          icon,\n          disableInput,\n          title,\n          labelId,\n        })}\n      </Downshift>\n    )\n  }\n}\n\nconst renderDropdown = ({ color, list, itemWrapper, icon, disableInput, title, labelId }) => ({\n  isOpen,\n  highlightedIndex,\n  selectedItem,\n  getRootProps,\n  getToggleButtonProps,\n  getInputProps,\n  getItemProps,\n}) => {\n  return (\n    <DropdownContainer {...getRootProps({ refKey: 'innerRef' })}>\n      {title && <VisuallyHidden id={labelId}>{title}</VisuallyHidden>}\n      <DropdownIcon isOpen={isOpen}>{icon}</DropdownIcon>\n      <SelectedItem\n        getToggleButtonProps={getToggleButtonProps}\n        getInputProps={getInputProps}\n        isOpen={isOpen}\n        color={color}\n        hasIcon={!!icon}\n        disabled={disableInput}\n      >\n        {selectedItem.name}\n      </SelectedItem>\n      {isOpen ? (\n        <ListItems color={color}>\n          {list.map((item, index) => (\n            <ListItem\n              key={index}\n              color={color}\n              item={item}\n              itemWrapper={itemWrapper}\n              {...getItemProps({\n                item,\n                isSelected: selectedItem.name === item.name,\n                isHighlighted: highlightedIndex === index,\n              })}\n            >\n              {item.name}\n            </ListItem>\n          ))}\n        </ListItems>\n      ) : null}\n    </DropdownContainer>\n  )\n}\n\nconst DropdownContainer = ({ children, innerRef, ...rest }) => {\n  return (\n    <div {...rest} ref={innerRef} className=\"dropdown-container\">\n      {children}\n      <style jsx>\n        {`\n          .dropdown-container {\n            position: relative;\n            cursor: pointer;\n            user-select: none;\n            margin-left: 40px;\n          }\n        `}\n      </style>\n    </div>\n  )\n}\n\nconst DropdownIcon = ({ children, isOpen }) => {\n  if (children) {\n    return (\n      <div className=\"dropdown-icon\">\n        {children}\n        <style jsx>\n          {`\n            .dropdown-icon {\n              position: absolute;\n              left: -${isOpen ? 38 : 39}px;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: 40px;\n              height: 40px;\n              box-shadow: inset 0px 0px 0px ${isOpen ? 2 : 1}px white;\n              border-radius: 3px 0 0 3px;\n              cursor: initial;\n            }\n          `}\n        </style>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nconst SelectedItem = ({\n  getToggleButtonProps,\n  getInputProps,\n  children,\n  isOpen,\n  color,\n  hasIcon,\n  disabled,\n}) => {\n  const itemColor = color || COLORS.SECONDARY\n\n  return (\n    <span\n      {...getToggleButtonProps({ tabIndex: 0 })}\n      className={`dropdown-display ${isOpen ? 'is-open' : ''}`}\n      data-cy=\"theme-selector-button\"\n    >\n      <input\n        {...getInputProps({ placeholder: children, id: `downshift-input-${children}`, disabled })}\n        className=\"dropdown-display-text\"\n        spellCheck={false}\n      />\n      <div className=\"dropdown-arrow\">\n        <ArrowDown color={itemColor} />\n      </div>\n      <style jsx>\n        {`\n          .dropdown-display {\n            display: flex;\n            align-items: center;\n            height: 40px;\n            padding: 0 16px;\n            box-shadow: inset 0px 0px 0px 1px ${itemColor};\n            border-radius: ${hasIcon ? '0 3px 3px 0' : '3px'};\n            outline: none;\n          }\n          .dropdown-display:hover,\n          .dropdown-display:focus {\n            background: ${COLORS.HOVER};\n          }\n\n          .dropdown-display.is-open {\n            border-radius: ${hasIcon ? '0 3px 0 0' : '3px 3px 0 0'};\n            box-shadow: inset 0px 0px 0px 2px ${itemColor};\n          }\n\n          .dropdown-display-text {\n            flex-grow: 1;\n            color: ${itemColor};\n            background: transparent;\n            border: none;\n            outline: none;\n            font-size: inherit;\n            font-family: inherit;\n          }\n\n          .dropdown-arrow {\n            display: flex;\n          }\n\n          .is-open > .dropdown-arrow {\n            transform: rotate(180deg);\n          }\n        `}\n      </style>\n    </span>\n  )\n}\n\nconst ListItems = ({ children, color }) => {\n  return (\n    <ul role=\"listbox\" className=\"dropdown-list\">\n      {children}\n      <style jsx>\n        {`\n          .dropdown-list {\n            margin-top: -2px;\n            border: 2px solid ${color || COLORS.SECONDARY};\n            border-radius: 0 0 3px 3px;\n            max-height: 350px;\n            overflow-y: scroll;\n          }\n        `}\n      </style>\n    </ul>\n  )\n}\n\nconst ListItem = ({ children, color, isHighlighted, isSelected, itemWrapper, item, ...rest }) => {\n  const itemColor = color || COLORS.SECONDARY\n\n  return (\n    <li {...rest} className=\"dropdown-list-item\" data-cy=\"dropdown-item\">\n      {itemWrapper ? (\n        itemWrapper({ children, color: itemColor, item, isSelected })\n      ) : (\n        <span className=\"dropdown-list-item-text\">{children}</span>\n      )}\n      {isSelected ? <CheckMark /> : null}\n      <style jsx>\n        {`\n          .dropdown-list-item {\n            display: flex;\n            align-items: center;\n            background: ${isHighlighted ? COLORS.HOVER : COLORS.BLACK};\n            padding: 8px 16px;\n            border-bottom: 1px solid ${itemColor};\n          }\n\n          .dropdown-list-item:last-child {\n            border-bottom: none;\n          }\n\n          .dropdown-list-item:hover {\n            background: ${COLORS.HOVER};\n          }\n          .dropdown-list-item-text {\n            flex-grow: 1;\n            color: ${itemColor};\n          }\n        `}\n      </style>\n    </li>\n  )\n}\n\nexport default Dropdown\n"]},"metadata":{},"sourceType":"module"}