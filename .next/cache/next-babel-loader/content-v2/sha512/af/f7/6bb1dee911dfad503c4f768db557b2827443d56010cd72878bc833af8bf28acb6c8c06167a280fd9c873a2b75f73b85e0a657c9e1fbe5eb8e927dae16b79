{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/limengyu/Desktop/private/code/project/show-codes/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/limengyu/Desktop/private/code/project/show-codes/components/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport firebase from '../lib/client'; // IDEA: just read from firebase store at request time?\n\nimport { client } from '../lib/api';\nexport var Context = /*#__PURE__*/React.createContext(null);\nexport function useAuth() {\n  _s();\n\n  return React.useContext(Context);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction AuthContext(props) {\n  _s2();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (firebase) {\n      firebase.auth().onAuthStateChanged(function (newUser) {\n        return setState(newUser);\n      });\n    }\n  }, []);\n  React.useEffect(function () {\n    if (user) {\n      user.getIdToken().then(function (jwt) {\n        client.defaults.headers['Authorization'] = jwt ? \"Bearer \".concat(jwt) : undefined;\n      });\n    } else {\n      delete client.defaults.headers['Authorization'];\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: user,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(AuthContext, \"UIFdx3bwt5fbQG+J4GxVq6y5Px8=\");\n\n_c = AuthContext;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContext\");","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/components/AuthContext.js"],"names":["React","firebase","client","Context","createContext","useAuth","useContext","AuthContext","props","useState","user","setState","useEffect","auth","onAuthStateChanged","newUser","getIdToken","then","jwt","defaults","headers","undefined","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB,C,CACA;;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,IAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,CAAoB,IAApB,CAAhB;AAEP,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOL,KAAK,CAACM,UAAN,CAAiBH,OAAjB,CAAP;AACD;;GAFeE,O;;AAIhB,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA,wBACDR,KAAK,CAACS,QAAN,CAAe,IAAf,CADC;AAAA;AAAA,MACnBC,IADmB;AAAA,MACbC,QADa;;AAG1BX,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpB,QAAIX,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACY,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,OAAO;AAAA,eAAIJ,QAAQ,CAACI,OAAD,CAAZ;AAAA,OAA1C;AACD;AACF,GAJD,EAIG,EAJH;AAMAf,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAM;AACpB,QAAIF,IAAJ,EAAU;AACRA,MAAAA,IAAI,CAACM,UAAL,GAAkBC,IAAlB,CAAuB,UAAAC,GAAG,EAAI;AAC5BhB,QAAAA,MAAM,CAACiB,QAAP,CAAgBC,OAAhB,CAAwB,eAAxB,IAA2CF,GAAG,oBAAaA,GAAb,IAAqBG,SAAnE;AACD,OAFD;AAGD,KAJD,MAIO;AACL,aAAOnB,MAAM,CAACiB,QAAP,CAAgBC,OAAhB,CAAwB,eAAxB,CAAP;AACD;AACF,GARD,EAQG,CAACV,IAAD,CARH;AAUA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEA,IAAzB;AAAA,cAAgCF,KAAK,CAACc;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IApBQf,W;;KAAAA,W;AAsBT,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport firebase from '../lib/client'\n// IDEA: just read from firebase store at request time?\nimport { client } from '../lib/api'\n\nexport const Context = React.createContext(null)\n\nexport function useAuth() {\n  return React.useContext(Context)\n}\n\nfunction AuthContext(props) {\n  const [user, setState] = React.useState(null)\n\n  React.useEffect(() => {\n    if (firebase) {\n      firebase.auth().onAuthStateChanged(newUser => setState(newUser))\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (user) {\n      user.getIdToken().then(jwt => {\n        client.defaults.headers['Authorization'] = jwt ? `Bearer ${jwt}` : undefined\n      })\n    } else {\n      delete client.defaults.headers['Authorization']\n    }\n  }, [user])\n\n  return <Context.Provider value={user}>{props.children}</Context.Provider>\n}\n\nexport default AuthContext\n"]},"metadata":{},"sourceType":"module"}