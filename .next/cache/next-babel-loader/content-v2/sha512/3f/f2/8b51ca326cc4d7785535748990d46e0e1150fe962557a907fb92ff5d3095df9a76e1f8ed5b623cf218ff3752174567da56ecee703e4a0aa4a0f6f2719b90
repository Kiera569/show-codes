{"ast":null,"code":"import Morph from 'morphmorph';\nimport url from 'url';\nimport { escapeHtml } from './util';\nvar URL_LIMIT = 4e3;\nvar mapper = new Morph({\n  types: {\n    bool: function bool(v) {\n      if (v == null) return undefined;\n      if (v === 'false') return false;\n      return Boolean(v);\n    },\n    \"int\": function int(v) {\n      var integer = parseInt(v);\n      if (isNaN(integer)) return undefined;\n      return integer;\n    },\n    intArray: function intArray(v) {\n      if (v == null) return undefined;\n      return v.split(',').filter(function (i) {\n        return !isNaN(i);\n      }).map(function (i) {\n        return parseInt(i);\n      });\n    },\n    parse: function parse(v) {\n      try {\n        var x = JSON.parse(v);\n        return x;\n      } catch (e) {\n        return v;\n      }\n    },\n    decode: function decode(v) {\n      if (v == null) return undefined;\n\n      try {\n        return decodeURIComponent(v);\n      } catch (e) {\n        return v;\n      }\n    },\n    encode: function encode(v) {\n      if (v == null) return undefined;\n\n      try {\n        var encoded = encodeURIComponent(v);\n\n        if (encoded.length > URL_LIMIT) {\n          // soft prevent URL length limit errors https://github.com/carbon-app/carbon/issues/829\n          return encodeURIComponent(v.slice(0, URL_LIMIT / 2));\n        }\n\n        return encoded;\n      } catch (e) {\n        return v;\n      }\n    }\n  }\n});\nvar readMappings = [{\n  field: 'bg:backgroundColor'\n}, {\n  field: 't:theme'\n}, {\n  field: 'wt:windowTheme'\n}, {\n  field: 'l:language'\n}, {\n  field: 'ds:dropShadow',\n  type: 'bool'\n}, {\n  field: 'dsyoff:dropShadowOffsetY'\n}, {\n  field: 'dsblur:dropShadowBlurRadius'\n}, {\n  field: 'wc:windowControls',\n  type: 'bool'\n}, {\n  field: 'wa:widthAdjustment',\n  type: 'bool'\n}, {\n  field: 'pv:paddingVertical'\n}, {\n  field: 'ph:paddingHorizontal'\n}, {\n  field: 'ln:lineNumbers',\n  type: 'bool'\n}, {\n  field: 'fl:firstLineNumber',\n  type: 'int'\n}, {\n  field: 'fm:fontFamily'\n}, {\n  field: 'fs:fontSize'\n}, {\n  field: 'lh:lineHeight'\n}, {\n  field: 'si:squaredImage',\n  type: 'bool'\n}, {\n  field: 'es:exportSize'\n}, {\n  field: 'wm:watermark',\n  type: 'bool'\n}, {\n  field: 'sl:selectedLines',\n  type: 'intArray'\n}, {\n  field: 'copy',\n  type: 'bool'\n}, {\n  field: 'readonly',\n  type: 'bool'\n}, {\n  field: 'id'\n}, {\n  field: 'highlights',\n  type: 'parse'\n}, {\n  field: 'code',\n  type: 'decode'\n}];\nvar writeMappings = [{\n  field: 'backgroundColor:bg'\n}, {\n  field: 'theme:t'\n}, {\n  field: 'windowTheme:wt'\n}, {\n  field: 'language:l'\n}, {\n  field: 'dropShadow:ds',\n  type: 'bool'\n}, {\n  field: 'dropShadowOffsetY:dsyoff'\n}, {\n  field: 'dropShadowBlurRadius:dsblur'\n}, {\n  field: 'windowControls:wc',\n  type: 'bool'\n}, {\n  field: 'widthAdjustment:wa',\n  type: 'bool'\n}, {\n  field: 'paddingVertical:pv'\n}, {\n  field: 'paddingHorizontal:ph'\n}, {\n  field: 'lineNumbers:ln',\n  type: 'bool'\n}, {\n  field: 'firstLineNumber:fl',\n  type: 'int'\n}, {\n  field: 'fontFamily:fm'\n}, {\n  field: 'fontSize:fs'\n}, {\n  field: 'lineHeight:lh'\n}, {\n  field: 'squaredImage:si',\n  type: 'bool'\n}, {\n  field: 'exportSize:es'\n}, {\n  field: 'watermark:wm',\n  type: 'bool'\n}, {\n  field: 'code',\n  type: 'encode'\n}];\nexport var serializeState = function serializeState(state) {\n  var stateString = encodeURIComponent(JSON.stringify(state));\n  return encodeURIComponent(true ? btoa(stateString) : Buffer.from(stateString).toString('base64'));\n};\nexport var deserializeState = function deserializeState(serializedState) {\n  var stateString;\n\n  if (true) {\n    stateString = atob(serializedState);\n  } else {\n    stateString = Buffer.from(serializedState, 'base64').toString();\n  }\n\n  return JSON.parse(decodeURIComponent(stateString));\n};\n\nvar getQueryStringObject = function getQueryStringObject(query) {\n  if (query.state) {\n    return deserializeState(query.state);\n  }\n\n  var state = mapper.map(readMappings, query);\n  Object.keys(state).forEach(function (key) {\n    if (state[key] === '') state[key] = undefined;\n  });\n  return state;\n};\n\nfunction getQueryStringState(query) {\n  var queryParams = getQueryStringObject(query);\n  return Object.keys(queryParams).length ? queryParams : {};\n}\n\nfunction fixAsPathEncoding(asPath) {\n  try {\n    return url.parse(asPath, true);\n  } catch (e) {\n    return url.parse(encodeURI(asPath), true);\n  }\n}\n\nexport var getRouteState = function getRouteState(router) {\n  var _router$asPath = router.asPath,\n      asPath = _router$asPath === void 0 ? '' : _router$asPath;\n\n  var _fixAsPathEncoding = fixAsPathEncoding(asPath),\n      query = _fixAsPathEncoding.query,\n      pathname = _fixAsPathEncoding.pathname;\n\n  var queryState = getQueryStringState(query);\n  var path = escapeHtml(pathname // remove trailing slash\n  .replace(/\\/$/, '').split('/').pop());\n  var parameter = path.length >= 19 && path.indexOf('.') < 0 ? path : null;\n  return {\n    parameter: parameter,\n    queryState: queryState\n  };\n};\nexport var updateRouteState = function updateRouteState(router, state) {\n  var mappedState = mapper.map(writeMappings, state); // calls `encodeURIComponent` on each key internally\n  // const query = qs.stringify(mappedState)\n\n  router.replace({\n    pathname: router.pathname\n  }, {\n    pathname: router.pathname,\n    query: mappedState\n  }, {\n    shallow: true,\n    scroll: false\n  });\n};","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/lib/routing.js"],"names":["Morph","url","escapeHtml","URL_LIMIT","mapper","types","bool","v","undefined","Boolean","integer","parseInt","isNaN","intArray","split","filter","i","map","parse","x","JSON","e","decode","decodeURIComponent","encode","encoded","encodeURIComponent","length","slice","readMappings","field","type","writeMappings","serializeState","state","stateString","stringify","btoa","Buffer","from","toString","deserializeState","serializedState","atob","getQueryStringObject","query","Object","keys","forEach","key","getQueryStringState","queryParams","fixAsPathEncoding","asPath","encodeURI","getRouteState","router","pathname","queryState","path","replace","pop","parameter","indexOf","updateRouteState","mappedState","shallow","scroll"],"mappings":"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","sourcesContent":["import Morph from 'morphmorph'\nimport url from 'url'\n\nimport { escapeHtml } from './util'\n\nconst URL_LIMIT = 4e3\nconst mapper = new Morph({\n  types: {\n    bool: v => {\n      if (v == null) return undefined\n      if (v === 'false') return false\n      return Boolean(v)\n    },\n    int: v => {\n      const integer = parseInt(v)\n      if (isNaN(integer)) return undefined\n      return integer\n    },\n    intArray: v => {\n      if (v == null) return undefined\n      return v\n        .split(',')\n        .filter(i => !isNaN(i))\n        .map(i => parseInt(i))\n    },\n    parse: v => {\n      try {\n        const x = JSON.parse(v)\n        return x\n      } catch (e) {\n        return v\n      }\n    },\n    decode: v => {\n      if (v == null) return undefined\n      try {\n        return decodeURIComponent(v)\n      } catch (e) {\n        return v\n      }\n    },\n    encode: v => {\n      if (v == null) return undefined\n      try {\n        const encoded = encodeURIComponent(v)\n        if (encoded.length > URL_LIMIT) {\n          // soft prevent URL length limit errors https://github.com/carbon-app/carbon/issues/829\n          return encodeURIComponent(v.slice(0, URL_LIMIT / 2))\n        }\n        return encoded\n      } catch (e) {\n        return v\n      }\n    },\n  },\n})\n\nconst readMappings = [\n  { field: 'bg:backgroundColor' },\n  { field: 't:theme' },\n  { field: 'wt:windowTheme' },\n  { field: 'l:language' },\n  { field: 'ds:dropShadow', type: 'bool' },\n  { field: 'dsyoff:dropShadowOffsetY' },\n  { field: 'dsblur:dropShadowBlurRadius' },\n  { field: 'wc:windowControls', type: 'bool' },\n  { field: 'wa:widthAdjustment', type: 'bool' },\n  { field: 'pv:paddingVertical' },\n  { field: 'ph:paddingHorizontal' },\n  { field: 'ln:lineNumbers', type: 'bool' },\n  { field: 'fl:firstLineNumber', type: 'int' },\n  { field: 'fm:fontFamily' },\n  { field: 'fs:fontSize' },\n  { field: 'lh:lineHeight' },\n  { field: 'si:squaredImage', type: 'bool' },\n  { field: 'es:exportSize' },\n  { field: 'wm:watermark', type: 'bool' },\n  { field: 'sl:selectedLines', type: 'intArray' },\n  { field: 'copy', type: 'bool' },\n  { field: 'readonly', type: 'bool' },\n  { field: 'id' },\n  { field: 'highlights', type: 'parse' },\n  { field: 'code', type: 'decode' },\n]\n\nconst writeMappings = [\n  { field: 'backgroundColor:bg' },\n  { field: 'theme:t' },\n  { field: 'windowTheme:wt' },\n  { field: 'language:l' },\n  { field: 'dropShadow:ds', type: 'bool' },\n  { field: 'dropShadowOffsetY:dsyoff' },\n  { field: 'dropShadowBlurRadius:dsblur' },\n  { field: 'windowControls:wc', type: 'bool' },\n  { field: 'widthAdjustment:wa', type: 'bool' },\n  { field: 'paddingVertical:pv' },\n  { field: 'paddingHorizontal:ph' },\n  { field: 'lineNumbers:ln', type: 'bool' },\n  { field: 'firstLineNumber:fl', type: 'int' },\n  { field: 'fontFamily:fm' },\n  { field: 'fontSize:fs' },\n  { field: 'lineHeight:lh' },\n  { field: 'squaredImage:si', type: 'bool' },\n  { field: 'exportSize:es' },\n  { field: 'watermark:wm', type: 'bool' },\n  { field: 'code', type: 'encode' },\n]\n\nexport const serializeState = state => {\n  const stateString = encodeURIComponent(JSON.stringify(state))\n\n  return encodeURIComponent(\n    typeof window !== 'undefined' ? btoa(stateString) : Buffer.from(stateString).toString('base64')\n  )\n}\n\nexport const deserializeState = serializedState => {\n  let stateString\n  if (typeof window !== 'undefined') {\n    stateString = atob(serializedState)\n  } else {\n    stateString = Buffer.from(serializedState, 'base64').toString()\n  }\n\n  return JSON.parse(decodeURIComponent(stateString))\n}\n\nconst getQueryStringObject = query => {\n  if (query.state) {\n    return deserializeState(query.state)\n  }\n\n  const state = mapper.map(readMappings, query)\n\n  Object.keys(state).forEach(key => {\n    if (state[key] === '') state[key] = undefined\n  })\n\n  return state\n}\n\nfunction getQueryStringState(query) {\n  const queryParams = getQueryStringObject(query)\n  return Object.keys(queryParams).length ? queryParams : {}\n}\n\nfunction fixAsPathEncoding(asPath) {\n  try {\n    return url.parse(asPath, true)\n  } catch (e) {\n    return url.parse(encodeURI(asPath), true)\n  }\n}\n\nexport const getRouteState = router => {\n  const { asPath = '' } = router\n  const { query, pathname } = fixAsPathEncoding(asPath)\n  const queryState = getQueryStringState(query)\n  const path = escapeHtml(\n    pathname\n      // remove trailing slash\n      .replace(/\\/$/, '')\n      .split('/')\n      .pop()\n  )\n\n  const parameter = path.length >= 19 && path.indexOf('.') < 0 ? path : null\n\n  return {\n    parameter,\n    queryState,\n  }\n}\n\nexport const updateRouteState = (router, state) => {\n  const mappedState = mapper.map(writeMappings, state)\n  // calls `encodeURIComponent` on each key internally\n  // const query = qs.stringify(mappedState)\n\n  router.replace(\n    {\n      pathname: router.pathname,\n    },\n    {\n      pathname: router.pathname,\n      query: mappedState,\n    },\n    { shallow: true, scroll: false }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}