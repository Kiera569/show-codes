{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/limengyu/Desktop/private/code/project/show-codes/pages/[id].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport IndexPage from './index';\nimport api from '../lib/api';\nexport async function getServerSideProps({\n  req,\n  res,\n  query\n}) {\n  const {\n    id: path,\n    filename\n  } = query;\n  const parameter = path.length >= 19 && path.indexOf('.') < 0 ? path : null;\n  let snippet;\n\n  if (parameter) {\n    const host = req ? req.headers.host : undefined;\n    snippet = await api.snippet.get(parameter, {\n      host,\n      filename\n    });\n\n    if (snippet) {\n      return {\n        props: {\n          snippet,\n          host\n        }\n      };\n    } // 404 Not found\n\n\n    if (res) {\n      res.writeHead(302, {\n        Location: '/'\n      });\n      res.end();\n    } else {\n      Router.push('/');\n    }\n  }\n\n  return {\n    props: {}\n  };\n}\nexport default /*#__PURE__*/React.memo(function IdPage(props) {\n  return /*#__PURE__*/_jsxDEV(IndexPage, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n});","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/pages/[id].js"],"names":["React","Router","IndexPage","api","getServerSideProps","req","res","query","id","path","filename","parameter","length","indexOf","snippet","host","headers","undefined","get","props","writeHead","Location","end","push","memo","IdPage"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,SAAP,MAAsB,SAAtB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAYC,EAAAA;AAAZ,CAAlC,EAAuD;AAC5D,QAAM;AAAEC,IAAAA,EAAE,EAAEC,IAAN;AAAYC,IAAAA;AAAZ,MAAyBH,KAA/B;AACA,QAAMI,SAAS,GAAGF,IAAI,CAACG,MAAL,IAAe,EAAf,IAAqBH,IAAI,CAACI,OAAL,CAAa,GAAb,IAAoB,CAAzC,GAA6CJ,IAA7C,GAAoD,IAAtE;AAEA,MAAIK,OAAJ;;AACA,MAAIH,SAAJ,EAAe;AACb,UAAMI,IAAI,GAAGV,GAAG,GAAGA,GAAG,CAACW,OAAJ,CAAYD,IAAf,GAAsBE,SAAtC;AACAH,IAAAA,OAAO,GAAG,MAAMX,GAAG,CAACW,OAAJ,CAAYI,GAAZ,CAAgBP,SAAhB,EAA2B;AAAEI,MAAAA,IAAF;AAAQL,MAAAA;AAAR,KAA3B,CAAhB;;AACA,QAAII,OAAJ,EAAa;AACX,aAAO;AAAEK,QAAAA,KAAK,EAAE;AAAEL,UAAAA,OAAF;AAAWC,UAAAA;AAAX;AAAT,OAAP;AACD,KALY,CAOb;;;AACA,QAAIT,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACc,SAAJ,CAAc,GAAd,EAAmB;AACjBC,QAAAA,QAAQ,EAAE;AADO,OAAnB;AAGAf,MAAAA,GAAG,CAACgB,GAAJ;AACD,KALD,MAKO;AACLrB,MAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACD;AACF;;AAED,SAAO;AAAEJ,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;AAED,4BAAenB,KAAK,CAACwB,IAAN,CAAW,SAASC,MAAT,CAAgBN,KAAhB,EAAuB;AAC/C,sBAAO,QAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFc,CAAf","sourcesContent":["import React from 'react'\nimport Router from 'next/router'\n\nimport IndexPage from './index'\n\nimport api from '../lib/api'\n\nexport async function getServerSideProps({ req, res, query }) {\n  const { id: path, filename } = query\n  const parameter = path.length >= 19 && path.indexOf('.') < 0 ? path : null\n\n  let snippet\n  if (parameter) {\n    const host = req ? req.headers.host : undefined\n    snippet = await api.snippet.get(parameter, { host, filename })\n    if (snippet) {\n      return { props: { snippet, host } }\n    }\n\n    // 404 Not found\n    if (res) {\n      res.writeHead(302, {\n        Location: '/',\n      })\n      res.end()\n    } else {\n      Router.push('/')\n    }\n  }\n\n  return { props: {} }\n}\n\nexport default React.memo(function IdPage(props) {\n  return <IndexPage {...props} />\n})\n"]},"metadata":{},"sourceType":"module"}