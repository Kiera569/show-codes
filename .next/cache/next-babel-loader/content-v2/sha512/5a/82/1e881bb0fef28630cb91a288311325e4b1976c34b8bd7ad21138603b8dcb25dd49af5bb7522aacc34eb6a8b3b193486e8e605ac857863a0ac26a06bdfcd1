{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/limengyu/Desktop/private/code/project/show-codes/components/Settings.js\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport omitBy from 'lodash.omitby';\nimport { useKeyboardListener } from 'actionsack';\nimport ThemeSelect from './ThemeSelect';\nimport FontSelect from './FontSelect';\nimport Slider from './Slider';\nimport Input from './Input';\nimport Toggle from './Toggle';\nimport Popout, { managePopout } from './Popout';\nimport Button from './Button';\nimport Presets from './Presets';\nimport MenuButton from './MenuButton';\nimport { COLORS, DEFAULT_PRESETS, DEFAULT_SETTINGS, DEFAULT_WIDTHS } from '../lib/constants';\nimport { toggle, getPresets, savePresets, generateId, fileToJSON } from '../lib/util';\nimport SettingsIcon from './svg/Settings';\n\nfunction KeyboardShortcut({\n  trigger,\n  handle\n}) {\n  useKeyboardListener(trigger, handle);\n  return null;\n}\n\nfunction WindowSettings({\n  onChange,\n  windowTheme,\n  paddingHorizontal,\n  paddingVertical,\n  dropShadow,\n  dropShadowBlurRadius,\n  dropShadowOffsetY,\n  windowControls,\n  widthAdjustment,\n  width,\n  watermark,\n  onWidthChanging,\n  onWidthChanged\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: _JSXStyle.dynamic([[\"2396155422\", [COLORS.SECONDARY]]]) + \" \" + \"settings-content\",\n    children: [/*#__PURE__*/_jsxDEV(ThemeSelect, {\n      selected: windowTheme || 'none',\n      windowControls: windowControls,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"2396155422\", [COLORS.SECONDARY]]]) + \" \" + \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Slider, {\n        label: \"Padding (vert)\",\n        value: paddingVertical,\n        maxValue: 200,\n        onChange: onChange.bind(null, 'paddingVertical')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        label: \"Padding (horiz)\",\n        value: paddingHorizontal,\n        onChange: onChange.bind(null, 'paddingHorizontal'),\n        onMouseDown: onWidthChanging,\n        onMouseUp: onWidthChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      label: \"Drop shadow\",\n      enabled: dropShadow,\n      onChange: onChange.bind(null, 'dropShadow')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), dropShadow && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"2396155422\", [COLORS.SECONDARY]]]) + \" \" + \"row drop-shadow-options\",\n      children: [/*#__PURE__*/_jsxDEV(Slider, {\n        label: \"(offset-y)\",\n        value: dropShadowOffsetY,\n        onChange: onChange.bind(null, 'dropShadowOffsetY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        label: \"(blur-radius)\",\n        value: dropShadowBlurRadius,\n        onChange: onChange.bind(null, 'dropShadowBlurRadius')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      label: \"Auto-adjust width\",\n      enabled: widthAdjustment,\n      onChange: onChange.bind(null, 'widthAdjustment')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), !widthAdjustment && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: _JSXStyle.dynamic([[\"2396155422\", [COLORS.SECONDARY]]]) + \" \" + \"row settings-row width-row\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Width\",\n        type: \"number\",\n        value: width,\n        min: DEFAULT_WIDTHS.minWidth,\n        max: DEFAULT_WIDTHS.maxWidth,\n        onChange: e => onChange('width', e.target.value),\n        width: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      label: \"Watermark\",\n      enabled: watermark,\n      onChange: onChange.bind(null, 'watermark')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2396155422\",\n      dynamic: [COLORS.SECONDARY],\n      children: `.width-row.__jsx-style-dynamic-selector{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:8px 12px 8px 8px;}.row.__jsx-style-dynamic-selector>div:first-child{border-right:1px solid ${COLORS.SECONDARY};}.drop-shadow-options.__jsx-style-dynamic-selector .slider-bg,.drop-shadow-options.__jsx-style-dynamic-selector label{opacity:0.5;}.settings-content.__jsx-style-dynamic-selector .settings-row:focus-within{outline:-webkit-focus-ring-color auto 4px;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Settings.js */`\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\nfunction EditorSettings({\n  onChange,\n  onUpload,\n  font,\n  size,\n  lineHeight,\n  lineNumbers,\n  firstLineNumber,\n  hiddenCharacters,\n  onWidthChanging,\n  onWidthChanged\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-3674362433\" + \" \" + \"settings-content\",\n    children: [/*#__PURE__*/_jsxDEV(FontSelect, {\n      selected: font,\n      onUpload: onUpload,\n      onChange: onChange.bind(null, 'fontFamily')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      label: \"Size\",\n      value: size,\n      minValue: 10,\n      maxValue: 18,\n      step: 0.5,\n      onChange: onChange.bind(null, 'fontSize'),\n      onMouseDown: onWidthChanging,\n      onMouseUp: onWidthChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      label: \"Line height\",\n      value: lineHeight,\n      minValue: 90,\n      maxValue: 250,\n      unit: \"%\",\n      onChange: onChange.bind(null, 'lineHeight')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      label: \"Line numbers\",\n      enabled: lineNumbers,\n      onChange: onChange.bind(null, 'lineNumbers')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), lineNumbers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-3674362433\" + \" \" + \"row settings-row first-line-number-row\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        label: \"First line number\",\n        type: \"number\",\n        value: firstLineNumber,\n        min: 0,\n        onChange: e => onChange('firstLineNumber', Number(e.target.value)),\n        width: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      label: \"Hidden characters\",\n      enabled: hiddenCharacters,\n      onChange: onChange.bind(null, 'hiddenCharacters')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"3674362433\",\n      children: \".first-line-number-row.jsx-3674362433{padding:8px 12px 8px 8px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Settings.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\nconst resetButtonStyle = {\n  borderTop: `1px solid ${COLORS.SECONDARY}`\n};\n\nfunction MiscSettings({\n  format,\n  reset,\n  applyPreset,\n  settings\n}) {\n  const input = React.useRef(null);\n  let download;\n\n  try {\n    download = `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(settings))}`;\n  } catch (error) {// pass\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-1883028103\" + \" \" + \"settings-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-1883028103\" + \" \" + \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        hidden: true,\n        ref: input,\n        type: \"file\",\n        accept: \".json\",\n        onChange: async e => {\n          const json = await fileToJSON(e.target.files[0]);\n\n          if (json) {\n            applyPreset(json);\n          }\n        },\n        className: \"jsx-1883028103\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        center: true,\n        style: {\n          borderRight: `1px solid ${COLORS.SECONDARY}`\n        },\n        onClick: () => input.current.click(),\n        children: \"Import config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        center: true,\n        Component: \"a\",\n        href: download,\n        download: \"carbon-config.json\",\n        children: \"Export config\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      center: true,\n      onClick: format,\n      style: resetButtonStyle,\n      children: \"Prettify code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      center: true,\n      color: COLORS.RED,\n      onClick: reset,\n      style: resetButtonStyle,\n      children: \"Reset settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"1883028103\",\n      children: \".row.jsx-1883028103{-webkit-flex:1;-ms-flex:1;flex:1;}.settings-content.jsx-1883028103{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}.settings-content.jsx-1883028103 a{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-user-drag:none;-moz-user-drag:none;-ms-user-drag:none;user-drag:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Settings.js */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\nconst settingButtonStyle = {\n  width: '40px',\n  height: '100%'\n};\n\nconst invalidSetting = (v, k) => // Allow highlights in presets and config exports\n!(Object.prototype.hasOwnProperty.call(DEFAULT_SETTINGS, k) || k === 'highlights');\n\nclass Settings extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      presets: DEFAULT_PRESETS,\n      selectedMenu: 'Window',\n      showPresets: true,\n      previousSettings: null,\n      widthChanging: false\n    });\n\n    _defineProperty(this, \"settingsRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"menuRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"togglePresets\", () => this.setState(toggle('showPresets')));\n\n    _defineProperty(this, \"selectMenu\", selectedMenu => () => this.setState({\n      selectedMenu\n    }));\n\n    _defineProperty(this, \"handleWidthChanging\", () => {\n      const rect = this.settingsRef.current.getBoundingClientRect();\n      this.settingPosition = {\n        top: rect.bottom,\n        left: rect.left\n      };\n      this.setState({\n        widthChanging: true\n      });\n    });\n\n    _defineProperty(this, \"handleWidthChanged\", () => this.setState({\n      widthChanging: false\n    }));\n\n    _defineProperty(this, \"handleChange\", (key, value) => {\n      this.props.onChange(key, value);\n      this.setState({\n        previousSettings: null\n      });\n    });\n\n    _defineProperty(this, \"handleOpenAndFocus\", () => {\n      this.props.toggleVisibility();\n\n      if (!this.props.isVisible) {\n        this.menuRef.current.focus();\n      }\n    });\n\n    _defineProperty(this, \"handleReset\", () => {\n      this.props.resetDefaultSettings();\n      this.setState({\n        previousSettings: null\n      });\n    });\n\n    _defineProperty(this, \"handleFontUpload\", (id, url) => {\n      this.props.onChange('fontFamily', id);\n      this.props.onChange('fontUrl', url);\n      this.props.toggleVisibility();\n    });\n\n    _defineProperty(this, \"getSettingsFromProps\", () => omitBy(this.props, invalidSetting));\n\n    _defineProperty(this, \"applyPreset\", preset => {\n      const previousSettings = this.getSettingsFromProps();\n      this.props.applyPreset(preset);\n      this.setState({\n        previousSettings\n      });\n    });\n\n    _defineProperty(this, \"undoPreset\", () => {\n      this.props.applyPreset(_objectSpread(_objectSpread({}, this.state.previousSettings), {}, {\n        id: null\n      }));\n      this.setState({\n        previousSettings: null\n      });\n    });\n\n    _defineProperty(this, \"removePreset\", id => {\n      if (this.props.preset === id) {\n        this.props.onChange('preset', null);\n        this.setState({\n          previousSettings: null\n        });\n      }\n\n      this.setState(({\n        presets\n      }) => ({\n        presets: presets.filter(p => p.id !== id)\n      }), this.savePresets);\n    });\n\n    _defineProperty(this, \"createPreset\", async () => {\n      const newPreset = this.getSettingsFromProps();\n      newPreset.id = `preset:${generateId()}`;\n      newPreset.custom = true;\n      newPreset.icon = await this.props.getCarbonImage({\n        format: 'png',\n        squared: true,\n        exportSize: 1\n      });\n      this.props.onChange('preset', newPreset.id);\n      this.setState(({\n        presets\n      }) => ({\n        previousSettings: null,\n        presets: [newPreset, ...presets]\n      }), this.savePresets);\n    });\n\n    _defineProperty(this, \"savePresets\", () => savePresets(this.state.presets.filter(p => p.custom)));\n\n    _defineProperty(this, \"renderContent\", () => {\n      switch (this.state.selectedMenu) {\n        case 'Window':\n          return /*#__PURE__*/_jsxDEV(WindowSettings, {\n            onChange: this.handleChange,\n            onWidthChanging: this.handleWidthChanging,\n            onWidthChanged: this.handleWidthChanged,\n            windowTheme: this.props.windowTheme,\n            paddingHorizontal: this.props.paddingHorizontal,\n            paddingVertical: this.props.paddingVertical,\n            dropShadow: this.props.dropShadow,\n            dropShadowBlurRadius: this.props.dropShadowBlurRadius,\n            dropShadowOffsetY: this.props.dropShadowOffsetY,\n            windowControls: this.props.windowControls,\n            widthAdjustment: this.props.widthAdjustment,\n            width: this.props.width,\n            watermark: this.props.watermark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 11\n          }, this);\n\n        case 'Editor':\n          return /*#__PURE__*/_jsxDEV(EditorSettings, {\n            onChange: this.handleChange,\n            onUpload: this.handleFontUpload,\n            onWidthChanging: this.handleWidthChanging,\n            onWidthChanged: this.handleWidthChanged,\n            font: this.props.fontFamily,\n            size: this.props.fontSize,\n            lineHeight: this.props.lineHeight,\n            lineNumbers: this.props.lineNumbers,\n            firstLineNumber: this.props.firstLineNumber,\n            hiddenCharacters: this.props.hiddenCharacters\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 11\n          }, this);\n\n        case 'Misc':\n          {\n            const settings = this.getSettingsFromProps();\n            return /*#__PURE__*/_jsxDEV(MiscSettings, {\n              format: this.props.format,\n              reset: this.handleReset,\n              applyPreset: this.props.applyPreset,\n              settings: settings\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 11\n            }, this);\n          }\n\n        default:\n          return null;\n      }\n    });\n  }\n\n  componentDidMount() {\n    const storedPresets = getPresets(localStorage) || [];\n    this.setState(({\n      presets\n    }) => ({\n      presets: [...storedPresets, ...presets]\n    }));\n  }\n\n  render() {\n    const {\n      selectedMenu,\n      showPresets,\n      presets,\n      previousSettings,\n      widthChanging\n    } = this.state;\n    const {\n      preset,\n      isVisible,\n      toggleVisibility\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: this.settingsRef,\n      className: _JSXStyle.dynamic([[\"1625328732\", [COLORS.DARK_GRAY, COLORS.SECONDARY, COLORS.SECONDARY]]]) + \" \" + \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(KeyboardShortcut, {\n        trigger: \"\\u2318-/\",\n        handle: this.handleOpenAndFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KeyboardShortcut, {\n        trigger: \"\\u21E7-\\u2318-\\\\\",\n        handle: this.handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Settings Menu\",\n        border: true,\n        center: true,\n        selected: isVisible,\n        style: settingButtonStyle,\n        onClick: toggleVisibility,\n        children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popout, {\n        pointerLeft: \"15px\",\n        hidden: !isVisible,\n        style: {\n          position: widthChanging ? 'fixed' : 'absolute',\n          width: '316px',\n          top: widthChanging ? this.settingPosition.top : 'initial',\n          left: widthChanging ? this.settingPosition.left : 'initial'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Presets, {\n          show: showPresets,\n          presets: presets,\n          selected: preset,\n          toggle: this.togglePresets,\n          apply: this.applyPreset,\n          undo: this.undoPreset,\n          remove: this.removePreset,\n          create: this.createPreset,\n          applied: !!previousSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: _JSXStyle.dynamic([[\"1625328732\", [COLORS.DARK_GRAY, COLORS.SECONDARY, COLORS.SECONDARY]]]) + \" \" + \"settings-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: this.menuRef,\n            tabIndex: -1,\n            className: _JSXStyle.dynamic([[\"1625328732\", [COLORS.DARK_GRAY, COLORS.SECONDARY, COLORS.SECONDARY]]]) + \" \" + \"settings-menu\",\n            children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n              name: \"Window\",\n              select: this.selectMenu,\n              selected: selectedMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuButton, {\n              name: \"Editor\",\n              select: this.selectMenu,\n              selected: selectedMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuButton, {\n              name: \"Misc\",\n              select: this.selectMenu,\n              selected: selectedMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this), this.renderContent()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_JSXStyle, {\n        id: \"1625328732\",\n        dynamic: [COLORS.DARK_GRAY, COLORS.SECONDARY, COLORS.SECONDARY],\n        children: `.settings-container.__jsx-style-dynamic-selector{position:relative;}.settings-bottom.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}.settings-menu.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-flex:0 0 96px;-ms-flex:0 0 96px;flex:0 0 96px;background-color:${COLORS.DARK_GRAY};}.settings-bottom.__jsx-style-dynamic-selector .settings-content{width:100%;border-left:2px solid ${COLORS.SECONDARY};}.settings-bottom.__jsx-style-dynamic-selector .settings-content > div:not(:first-child){border-top:solid 1px ${COLORS.SECONDARY};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/limengyu/Desktop/private/code/project/show-codes/components/Settings.js */`\n      }, void 0, false, void 0, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default managePopout(Settings);","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/components/Settings.js"],"names":["React","omitBy","useKeyboardListener","ThemeSelect","FontSelect","Slider","Input","Toggle","Popout","managePopout","Button","Presets","MenuButton","COLORS","DEFAULT_PRESETS","DEFAULT_SETTINGS","DEFAULT_WIDTHS","toggle","getPresets","savePresets","generateId","fileToJSON","SettingsIcon","KeyboardShortcut","trigger","handle","WindowSettings","onChange","windowTheme","paddingHorizontal","paddingVertical","dropShadow","dropShadowBlurRadius","dropShadowOffsetY","windowControls","widthAdjustment","width","watermark","onWidthChanging","onWidthChanged","SECONDARY","bind","minWidth","maxWidth","e","target","value","EditorSettings","onUpload","font","size","lineHeight","lineNumbers","firstLineNumber","hiddenCharacters","Number","resetButtonStyle","borderTop","MiscSettings","format","reset","applyPreset","settings","input","useRef","download","encodeURIComponent","JSON","stringify","error","json","files","borderRight","current","click","RED","settingButtonStyle","height","invalidSetting","v","k","Object","prototype","hasOwnProperty","call","Settings","PureComponent","presets","selectedMenu","showPresets","previousSettings","widthChanging","createRef","setState","rect","settingsRef","getBoundingClientRect","settingPosition","top","bottom","left","key","props","toggleVisibility","isVisible","menuRef","focus","resetDefaultSettings","id","url","preset","getSettingsFromProps","state","filter","p","newPreset","custom","icon","getCarbonImage","squared","exportSize","handleChange","handleWidthChanging","handleWidthChanged","handleFontUpload","fontFamily","fontSize","handleReset","componentDidMount","storedPresets","localStorage","render","DARK_GRAY","handleOpenAndFocus","position","togglePresets","undoPreset","removePreset","createPreset","selectMenu","renderContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport omitBy from 'lodash.omitby'\nimport { useKeyboardListener } from 'actionsack'\n\nimport ThemeSelect from './ThemeSelect'\nimport FontSelect from './FontSelect'\nimport Slider from './Slider'\nimport Input from './Input'\nimport Toggle from './Toggle'\nimport Popout, { managePopout } from './Popout'\nimport Button from './Button'\nimport Presets from './Presets'\nimport MenuButton from './MenuButton'\nimport { COLORS, DEFAULT_PRESETS, DEFAULT_SETTINGS, DEFAULT_WIDTHS } from '../lib/constants'\nimport { toggle, getPresets, savePresets, generateId, fileToJSON } from '../lib/util'\nimport SettingsIcon from './svg/Settings'\n\nfunction KeyboardShortcut({ trigger, handle }) {\n  useKeyboardListener(trigger, handle)\n  return null\n}\n\nfunction WindowSettings({\n  onChange,\n  windowTheme,\n  paddingHorizontal,\n  paddingVertical,\n  dropShadow,\n  dropShadowBlurRadius,\n  dropShadowOffsetY,\n  windowControls,\n  widthAdjustment,\n  width,\n  watermark,\n  onWidthChanging,\n  onWidthChanged,\n}) {\n  return (\n    <div className=\"settings-content\">\n      <ThemeSelect\n        selected={windowTheme || 'none'}\n        windowControls={windowControls}\n        onChange={onChange}\n      />\n      <div className=\"row\">\n        <Slider\n          label=\"Padding (vert)\"\n          value={paddingVertical}\n          maxValue={200}\n          onChange={onChange.bind(null, 'paddingVertical')}\n        />\n        <Slider\n          label=\"Padding (horiz)\"\n          value={paddingHorizontal}\n          onChange={onChange.bind(null, 'paddingHorizontal')}\n          onMouseDown={onWidthChanging}\n          onMouseUp={onWidthChanged}\n        />\n      </div>\n      <Toggle\n        label=\"Drop shadow\"\n        enabled={dropShadow}\n        onChange={onChange.bind(null, 'dropShadow')}\n      />\n      {dropShadow && (\n        <div className=\"row drop-shadow-options\">\n          <Slider\n            label=\"(offset-y)\"\n            value={dropShadowOffsetY}\n            onChange={onChange.bind(null, 'dropShadowOffsetY')}\n          />\n          <Slider\n            label=\"(blur-radius)\"\n            value={dropShadowBlurRadius}\n            onChange={onChange.bind(null, 'dropShadowBlurRadius')}\n          />\n        </div>\n      )}\n      <Toggle\n        label=\"Auto-adjust width\"\n        enabled={widthAdjustment}\n        onChange={onChange.bind(null, 'widthAdjustment')}\n      />\n      {!widthAdjustment && (\n        <div className=\"row settings-row width-row\">\n          <Input\n            label=\"Width\"\n            type=\"number\"\n            value={width}\n            min={DEFAULT_WIDTHS.minWidth}\n            max={DEFAULT_WIDTHS.maxWidth}\n            onChange={e => onChange('width', e.target.value)}\n            width=\"50%\"\n          />\n        </div>\n      )}\n      <Toggle label=\"Watermark\" enabled={watermark} onChange={onChange.bind(null, 'watermark')} />\n      <style jsx>\n        {`\n          .width-row {\n            justify-content: space-between;\n            padding: 8px 12px 8px 8px;\n          }\n\n          .row > :global(div:first-child) {\n            border-right: 1px solid ${COLORS.SECONDARY};\n          }\n\n          .drop-shadow-options :global(.slider-bg),\n          .drop-shadow-options :global(label) {\n            opacity: 0.5;\n          }\n\n          .settings-content :global(.settings-row:focus-within) {\n            outline: -webkit-focus-ring-color auto 4px;\n          }\n        `}\n      </style>\n    </div>\n  )\n}\n\nfunction EditorSettings({\n  onChange,\n  onUpload,\n  font,\n  size,\n  lineHeight,\n  lineNumbers,\n  firstLineNumber,\n  hiddenCharacters,\n  onWidthChanging,\n  onWidthChanged,\n}) {\n  return (\n    <div className=\"settings-content\">\n      <FontSelect\n        selected={font}\n        onUpload={onUpload}\n        onChange={onChange.bind(null, 'fontFamily')}\n      />\n      <Slider\n        label=\"Size\"\n        value={size}\n        minValue={10}\n        maxValue={18}\n        step={0.5}\n        onChange={onChange.bind(null, 'fontSize')}\n        onMouseDown={onWidthChanging}\n        onMouseUp={onWidthChanged}\n      />\n      <Slider\n        label=\"Line height\"\n        value={lineHeight}\n        minValue={90}\n        maxValue={250}\n        unit=\"%\"\n        onChange={onChange.bind(null, 'lineHeight')}\n      />\n      <Toggle\n        label=\"Line numbers\"\n        enabled={lineNumbers}\n        onChange={onChange.bind(null, 'lineNumbers')}\n      />\n      {lineNumbers && (\n        <div className=\"row settings-row first-line-number-row\">\n          <Input\n            label=\"First line number\"\n            type=\"number\"\n            value={firstLineNumber}\n            min={0}\n            onChange={e => onChange('firstLineNumber', Number(e.target.value))}\n            width=\"50%\"\n          />\n        </div>\n      )}\n      <Toggle\n        label=\"Hidden characters\"\n        enabled={hiddenCharacters}\n        onChange={onChange.bind(null, 'hiddenCharacters')}\n      />\n      <style jsx>\n        {`\n          .first-line-number-row {\n            padding: 8px 12px 8px 8px;\n          }\n        `}\n      </style>\n    </div>\n  )\n}\n\nconst resetButtonStyle = { borderTop: `1px solid ${COLORS.SECONDARY}` }\n\nfunction MiscSettings({ format, reset, applyPreset, settings }) {\n  const input = React.useRef(null)\n  let download\n  try {\n    download = `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(settings))}`\n  } catch (error) {\n    // pass\n  }\n  return (\n    <div className=\"settings-content\">\n      <div className=\"row\">\n        <input\n          hidden\n          ref={input}\n          type=\"file\"\n          accept=\".json\"\n          onChange={async e => {\n            const json = await fileToJSON(e.target.files[0])\n            if (json) {\n              applyPreset(json)\n            }\n          }}\n        />\n        <Button\n          center\n          style={{ borderRight: `1px solid ${COLORS.SECONDARY}` }}\n          onClick={() => input.current.click()}\n        >\n          Import config\n        </Button>\n        <Button center Component=\"a\" href={download} download=\"carbon-config.json\">\n          Export config\n        </Button>\n      </div>\n      <Button center onClick={format} style={resetButtonStyle}>\n        Prettify code\n      </Button>\n      <Button center color={COLORS.RED} onClick={reset} style={resetButtonStyle}>\n        Reset settings\n      </Button>\n      <style jsx>\n        {`\n          .row {\n            flex: 1;\n          }\n          .settings-content {\n            display: flex;\n            flex-direction: column;\n          }\n          .settings-content :global(a) {\n            display: flex;\n            flex: 1;\n            user-drag: none;\n          }\n        `}\n      </style>\n    </div>\n  )\n}\n\nconst settingButtonStyle = {\n  width: '40px',\n  height: '100%',\n}\n\nconst invalidSetting = (v, k) =>\n  // Allow highlights in presets and config exports\n  !(Object.prototype.hasOwnProperty.call(DEFAULT_SETTINGS, k) || k === 'highlights')\n\nclass Settings extends React.PureComponent {\n  state = {\n    presets: DEFAULT_PRESETS,\n    selectedMenu: 'Window',\n    showPresets: true,\n    previousSettings: null,\n    widthChanging: false,\n  }\n\n  settingsRef = React.createRef()\n  menuRef = React.createRef()\n\n  componentDidMount() {\n    const storedPresets = getPresets(localStorage) || []\n    this.setState(({ presets }) => ({\n      presets: [...storedPresets, ...presets],\n    }))\n  }\n\n  togglePresets = () => this.setState(toggle('showPresets'))\n\n  selectMenu = selectedMenu => () => this.setState({ selectedMenu })\n\n  handleWidthChanging = () => {\n    const rect = this.settingsRef.current.getBoundingClientRect()\n    this.settingPosition = { top: rect.bottom, left: rect.left }\n    this.setState({ widthChanging: true })\n  }\n\n  handleWidthChanged = () => this.setState({ widthChanging: false })\n\n  handleChange = (key, value) => {\n    this.props.onChange(key, value)\n    this.setState({ previousSettings: null })\n  }\n\n  handleOpenAndFocus = () => {\n    this.props.toggleVisibility()\n    if (!this.props.isVisible) {\n      this.menuRef.current.focus()\n    }\n  }\n\n  handleReset = () => {\n    this.props.resetDefaultSettings()\n    this.setState({ previousSettings: null })\n  }\n\n  handleFontUpload = (id, url) => {\n    this.props.onChange('fontFamily', id)\n    this.props.onChange('fontUrl', url)\n    this.props.toggleVisibility()\n  }\n\n  getSettingsFromProps = () => omitBy(this.props, invalidSetting)\n\n  applyPreset = preset => {\n    const previousSettings = this.getSettingsFromProps()\n\n    this.props.applyPreset(preset)\n\n    this.setState({ previousSettings })\n  }\n\n  undoPreset = () => {\n    this.props.applyPreset({ ...this.state.previousSettings, id: null })\n    this.setState({ previousSettings: null })\n  }\n\n  removePreset = id => {\n    if (this.props.preset === id) {\n      this.props.onChange('preset', null)\n      this.setState({ previousSettings: null })\n    }\n    this.setState(\n      ({ presets }) => ({ presets: presets.filter(p => p.id !== id) }),\n      this.savePresets\n    )\n  }\n\n  createPreset = async () => {\n    const newPreset = this.getSettingsFromProps()\n\n    newPreset.id = `preset:${generateId()}`\n    newPreset.custom = true\n\n    newPreset.icon = await this.props.getCarbonImage({\n      format: 'png',\n      squared: true,\n      exportSize: 1,\n    })\n\n    this.props.onChange('preset', newPreset.id)\n\n    this.setState(\n      ({ presets }) => ({\n        previousSettings: null,\n        presets: [newPreset, ...presets],\n      }),\n      this.savePresets\n    )\n  }\n\n  savePresets = () => savePresets(this.state.presets.filter(p => p.custom))\n\n  renderContent = () => {\n    switch (this.state.selectedMenu) {\n      case 'Window':\n        return (\n          <WindowSettings\n            onChange={this.handleChange}\n            onWidthChanging={this.handleWidthChanging}\n            onWidthChanged={this.handleWidthChanged}\n            windowTheme={this.props.windowTheme}\n            paddingHorizontal={this.props.paddingHorizontal}\n            paddingVertical={this.props.paddingVertical}\n            dropShadow={this.props.dropShadow}\n            dropShadowBlurRadius={this.props.dropShadowBlurRadius}\n            dropShadowOffsetY={this.props.dropShadowOffsetY}\n            windowControls={this.props.windowControls}\n            widthAdjustment={this.props.widthAdjustment}\n            width={this.props.width}\n            watermark={this.props.watermark}\n          />\n        )\n      case 'Editor':\n        return (\n          <EditorSettings\n            onChange={this.handleChange}\n            onUpload={this.handleFontUpload}\n            onWidthChanging={this.handleWidthChanging}\n            onWidthChanged={this.handleWidthChanged}\n            font={this.props.fontFamily}\n            size={this.props.fontSize}\n            lineHeight={this.props.lineHeight}\n            lineNumbers={this.props.lineNumbers}\n            firstLineNumber={this.props.firstLineNumber}\n            hiddenCharacters={this.props.hiddenCharacters}\n          />\n        )\n      case 'Misc': {\n        const settings = this.getSettingsFromProps()\n        return (\n          <MiscSettings\n            format={this.props.format}\n            reset={this.handleReset}\n            applyPreset={this.props.applyPreset}\n            settings={settings}\n          />\n        )\n      }\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const { selectedMenu, showPresets, presets, previousSettings, widthChanging } = this.state\n    const { preset, isVisible, toggleVisibility } = this.props\n\n    return (\n      <div className=\"settings-container\" ref={this.settingsRef}>\n        <KeyboardShortcut trigger=\"⌘-/\" handle={this.handleOpenAndFocus} />\n        <KeyboardShortcut trigger=\"⇧-⌘-\\\" handle={this.handleReset} />\n        <Button\n          title=\"Settings Menu\"\n          border\n          center\n          selected={isVisible}\n          style={settingButtonStyle}\n          onClick={toggleVisibility}\n        >\n          <SettingsIcon />\n        </Button>\n        <Popout\n          pointerLeft=\"15px\"\n          hidden={!isVisible}\n          style={{\n            position: widthChanging ? 'fixed' : 'absolute',\n            width: '316px',\n            top: widthChanging ? this.settingPosition.top : 'initial',\n            left: widthChanging ? this.settingPosition.left : 'initial',\n          }}\n        >\n          <Presets\n            show={showPresets}\n            presets={presets}\n            selected={preset}\n            toggle={this.togglePresets}\n            apply={this.applyPreset}\n            undo={this.undoPreset}\n            remove={this.removePreset}\n            create={this.createPreset}\n            applied={!!previousSettings}\n          />\n          <div className=\"settings-bottom\">\n            <div className=\"settings-menu\" ref={this.menuRef} tabIndex={-1}>\n              <MenuButton name=\"Window\" select={this.selectMenu} selected={selectedMenu} />\n              <MenuButton name=\"Editor\" select={this.selectMenu} selected={selectedMenu} />\n              <MenuButton name=\"Misc\" select={this.selectMenu} selected={selectedMenu} />\n            </div>\n            {this.renderContent()}\n          </div>\n        </Popout>\n        <style jsx>\n          {`\n            .settings-container {\n              position: relative;\n            }\n\n            .settings-bottom {\n              display: flex;\n            }\n\n            .settings-menu {\n              display: flex;\n              flex-direction: column;\n              flex: 0 0 96px;\n              background-color: ${COLORS.DARK_GRAY};\n            }\n\n            .settings-bottom :global(.settings-content) {\n              width: 100%;\n              border-left: 2px solid ${COLORS.SECONDARY};\n            }\n\n            .settings-bottom :global(.settings-content > div:not(:first-child)) {\n              border-top: solid 1px ${COLORS.SECONDARY};\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n}\n\nexport default managePopout(Settings)\n"]},"metadata":{},"sourceType":"module"}