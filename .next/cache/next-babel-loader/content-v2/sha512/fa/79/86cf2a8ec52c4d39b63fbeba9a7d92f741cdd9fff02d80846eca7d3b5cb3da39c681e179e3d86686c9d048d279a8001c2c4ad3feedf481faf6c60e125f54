{"ast":null,"code":"/* eslint-disable */\n\n/**\n * https://github.com/tsayen/dom-to-image/blob/master/src/dom-to-image.js\n */\n;\n\n(function (global) {\n  'use strict';\n\n  var util = newUtil();\n  var inliner = newInliner();\n  var fontFaces = newFontFaces();\n  var images = newImages(); // Default impl options\n\n  var defaultOptions = {\n    // Default is to fail on error, no placeholder\n    imagePlaceholder: undefined,\n    // Default cache bust is false, it will use the cache\n    cacheBust: false\n  };\n  var domtoimage = {\n    toSvg: toSvg,\n    toPng: toPng,\n    toJpeg: toJpeg,\n    toBlob: toBlob,\n    toPixelData: toPixelData,\n    impl: {\n      fontFaces: fontFaces,\n      images: images,\n      util: util,\n      inliner: inliner,\n      options: {}\n    }\n  };\n  if (typeof module !== 'undefined') module.exports = domtoimage;else global.domtoimage = domtoimage;\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options\n   * @param {Function} options.filter - Should return true if passed node should be included in the output\n   *          (excluding node means excluding it's children as well). Not called on the root node.\n   * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n   * @param {Number} options.width - width to be applied to node before rendering.\n   * @param {Number} options.height - height to be applied to node before rendering.\n   * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n   * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n              defaults to 1.0.\n   * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n   * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n   * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n   * */\n\n  function toSvg(node, options) {\n    options = options || {};\n    copyOptions(options);\n    return Promise.resolve(node).then(function (node) {\n      return cloneNode(node, options.filter, true);\n    }).then(embedFonts).then(inlineImages).then(applyOptions).then(function (clone) {\n      return makeSvgDataUri(clone, options.width || util.width(node), options.height || util.height(node), options.escapePercentSign);\n    });\n\n    function applyOptions(clone) {\n      if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n      if (options.width) clone.style.width = options.width + 'px';\n      if (options.height) clone.style.height = options.height + 'px';\n      if (options.style) Object.keys(options.style).forEach(function (property) {\n        clone.style[property] = options.style[property];\n      });\n      return clone;\n    }\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n   * */\n\n\n  function toPixelData(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.getContext('2d').getImageData(0, 0, util.width(node), util.height(node)).data;\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n   * */\n\n\n  function toPng(node, options) {\n    options = options || {};\n    options.escapePercentSign = true;\n    return draw(node, options).then(function (canvas) {\n      return canvas.toDataURL();\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n   * */\n\n\n  function toJpeg(node, options) {\n    options = options || {};\n    return draw(node, options).then(function (canvas) {\n      return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n    });\n  }\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image blob\n   * */\n\n\n  function toBlob(node, options) {\n    options = options || {};\n    options.escapePercentSign = true;\n    return draw(node, options).then(util.canvasToBlob);\n  }\n\n  function copyOptions(options) {\n    // Copy options to impl options for use in impl\n    if (typeof options.imagePlaceholder === 'undefined') {\n      domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n    } else {\n      domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n    }\n\n    if (typeof options.cacheBust === 'undefined') {\n      domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n    } else {\n      domtoimage.impl.options.cacheBust = options.cacheBust;\n    }\n  }\n\n  function draw(domNode, options) {\n    return toSvg(domNode, options).then(util.makeImage) // .then(util.delay(100))\n    .then(function (image) {\n      var canvas = newCanvas(domNode);\n      canvas.getContext('2d').drawImage(image, 0, 0);\n      return canvas;\n    });\n\n    function newCanvas(domNode) {\n      var canvas = document.createElement('canvas');\n      canvas.width = options.width || util.width(domNode);\n      canvas.height = options.height || util.height(domNode);\n\n      if (options.bgcolor) {\n        var ctx = canvas.getContext('2d');\n        ctx.fillStyle = options.bgcolor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n\n      return canvas;\n    }\n  }\n\n  function cloneNode(node, filter, root) {\n    if (!root && filter && !filter(node)) return Promise.resolve();\n    return Promise.resolve(node).then(makeNodeCopy).then(function (clone) {\n      return cloneChildren(node, clone, filter);\n    }).then(function (clone) {\n      return processClone(node, clone);\n    });\n\n    function makeNodeCopy(node) {\n      if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n      return node.cloneNode(false);\n    }\n\n    function cloneChildren(original, clone, filter) {\n      var children = original.childNodes;\n      if (children.length === 0) return Promise.resolve(clone);\n      return cloneChildrenInOrder(clone, util.asArray(children), filter).then(function () {\n        return clone;\n      });\n\n      function cloneChildrenInOrder(parent, children, filter) {\n        var done = Promise.resolve();\n        children.forEach(function (child) {\n          done = done.then(function () {\n            return cloneNode(child, filter);\n          }).then(function (childClone) {\n            if (childClone) parent.appendChild(childClone);\n          });\n        });\n        return done;\n      }\n    }\n\n    function processClone(original, clone) {\n      if (!(clone instanceof Element)) return clone;\n      return Promise.resolve().then(cloneStyle).then(clonePseudoElements).then(copyUserInput).then(fixSvg).then(function () {\n        return clone;\n      });\n\n      function cloneStyle() {\n        copyStyle(window.getComputedStyle(original), clone.style);\n\n        function copyStyle(source, target) {\n          if (source.cssText) target.cssText = source.cssText;else copyProperties(source, target);\n\n          function copyProperties(source, target) {\n            util.asArray(source).forEach(function (name) {\n              target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n            });\n          }\n        }\n      }\n\n      function clonePseudoElements() {\n        ;\n        [':before', ':after'].forEach(function (element) {\n          clonePseudoElement(element);\n        });\n\n        function clonePseudoElement(element) {\n          var style = window.getComputedStyle(original, element);\n          var content = style.getPropertyValue('content');\n          if (content === '' || content === 'none') return;\n          var className = util.uid();\n          clone.className = clone.className + ' ' + className;\n          var styleElement = document.createElement('style');\n          styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n          clone.appendChild(styleElement);\n\n          function formatPseudoElementStyle(className, element, style) {\n            var selector = '.' + className + ':' + element;\n            var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n            return document.createTextNode(selector + '{' + cssText + '}');\n\n            function formatCssText(style) {\n              var content = style.getPropertyValue('content');\n              return style.cssText + ' content: ' + content + ';';\n            }\n\n            function formatCssProperties(style) {\n              return util.asArray(style).map(formatProperty).join('; ') + ';';\n\n              function formatProperty(name) {\n                return name + ': ' + style.getPropertyValue(name) + (style.getPropertyPriority(name) ? ' !important' : '');\n              }\n            }\n          }\n        }\n      }\n\n      function copyUserInput() {\n        if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n        if (original instanceof HTMLInputElement) clone.setAttribute('value', original.value);\n      }\n\n      function fixSvg() {\n        if (!(clone instanceof SVGElement)) return;\n        clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        if (!(clone instanceof SVGRectElement)) return;\n        ['width', 'height'].forEach(function (attribute) {\n          var value = clone.getAttribute(attribute);\n          if (!value) return;\n          clone.style.setProperty(attribute, value);\n        });\n      }\n    }\n  }\n\n  function embedFonts(node) {\n    return fontFaces.resolveAll().then(function (cssText) {\n      var styleNode = document.createElement('style');\n      node.appendChild(styleNode);\n      styleNode.appendChild(document.createTextNode(cssText));\n      return node;\n    });\n  }\n\n  function inlineImages(node) {\n    return images.inlineAll(node).then(function () {\n      return node;\n    });\n  }\n\n  function makeSvgDataUri(node, width, height, escapePercentSign) {\n    return Promise.resolve(node).then(function (node) {\n      node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml'); // 利用XMLSerializer对象把XML文档或者Node对象转换为为解析的XML标记的一个字符串\n      // 将dom => xhtml\n\n      return new XMLSerializer().serializeToString(node);\n    }).then(function (str) {\n      return util.escapeXhtml(str, escapePercentSign);\n    }).then(function (xhtml) {\n      return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n    }) // 使用SVG的foreignObject\n    .then(function (foreignObject) {\n      return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' + foreignObject + '</svg>';\n    }) // 将图片转为svg格式\n    .then(function (svg) {\n      return 'data:image/svg+xml;charset=utf-8,' + svg;\n    });\n  }\n\n  function newUtil() {\n    return {\n      escape: escape,\n      parseExtension: parseExtension,\n      mimeType: mimeType,\n      dataAsUrl: dataAsUrl,\n      isDataUrl: isDataUrl,\n      canvasToBlob: canvasToBlob,\n      resolveUrl: resolveUrl,\n      getAndEncode: getAndEncode,\n      uid: uid(),\n      delay: delay,\n      asArray: asArray,\n      escapeXhtml: escapeXhtml,\n      makeImage: makeImage,\n      width: width,\n      height: height\n    };\n\n    function mimes() {\n      /*\n       * Only WOFF and EOT mime types for fonts are 'real'\n       * see http://www.iana.org/assignments/media-types/media-types.xhtml\n       */\n      var WOFF = 'application/font-woff';\n      var JPEG = 'image/jpeg';\n      return {\n        woff: WOFF,\n        woff2: WOFF,\n        ttf: 'application/font-truetype',\n        eot: 'application/vnd.ms-fontobject',\n        png: 'image/png',\n        jpg: JPEG,\n        jpeg: JPEG,\n        gif: 'image/gif',\n        tiff: 'image/tiff',\n        svg: 'image/svg+xml'\n      };\n    }\n\n    function parseExtension(url) {\n      var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n      if (match) return match[1];else return '';\n    }\n\n    function mimeType(url) {\n      var extension = parseExtension(url).toLowerCase();\n      return mimes()[extension] || '';\n    }\n\n    function isDataUrl(url) {\n      return url.search(/^(data:)/) !== -1;\n    }\n\n    function toBlob(canvas) {\n      return new Promise(function (resolve) {\n        var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        var length = binaryString.length;\n        var binaryArray = new Uint8Array(length);\n\n        for (var i = 0; i < length; i++) binaryArray[i] = binaryString.charCodeAt(i);\n\n        resolve(new Blob([binaryArray], {\n          type: 'image/png'\n        }));\n      });\n    }\n\n    function canvasToBlob(canvas) {\n      if (canvas.toBlob) return new Promise(function (resolve) {\n        canvas.toBlob(resolve);\n      });\n      return toBlob(canvas);\n    }\n\n    function resolveUrl(url, baseUrl) {\n      var doc = document.implementation.createHTMLDocument();\n      var base = doc.createElement('base');\n      doc.head.appendChild(base);\n      var a = doc.createElement('a');\n      doc.body.appendChild(a);\n      base.href = baseUrl;\n      a.href = url;\n      return a.href;\n    }\n\n    function uid() {\n      var index = 0;\n      return function () {\n        return 'u' + fourRandomChars() + index++;\n\n        function fourRandomChars() {\n          /* see http://stackoverflow.com/a/6248722/2519373 */\n          return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n        }\n      };\n    }\n\n    function makeImage(uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        image.onload = function () {\n          resolve(image);\n        };\n\n        image.onerror = reject;\n        image.src = uri;\n      });\n    }\n\n    function getAndEncode(url) {\n      var TIMEOUT = 30000;\n\n      if (domtoimage.impl.options.cacheBust) {\n        // Cache bypass so we dont have CORS issues with cached images\n        // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n        url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n      }\n\n      return new Promise(function (resolve) {\n        var request = new XMLHttpRequest();\n        request.onreadystatechange = done;\n        request.ontimeout = timeout;\n        request.responseType = 'blob';\n        request.timeout = TIMEOUT;\n        request.open('GET', url, true);\n        request.send();\n        var placeholder;\n\n        if (domtoimage.impl.options.imagePlaceholder) {\n          var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n\n          if (split && split[1]) {\n            placeholder = split[1];\n          }\n        }\n\n        function done() {\n          if (request.readyState !== 4) return;\n\n          if (request.status !== 200) {\n            if (placeholder) {\n              resolve(placeholder);\n            } else {\n              fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n            }\n\n            return;\n          }\n\n          var encoder = new FileReader();\n\n          encoder.onloadend = function () {\n            var content = encoder.result.split(/,/)[1];\n            resolve(content);\n          };\n\n          encoder.readAsDataURL(request.response);\n        }\n\n        function timeout() {\n          if (placeholder) {\n            resolve(placeholder);\n          } else {\n            fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n          }\n        }\n\n        function fail(message) {\n          console.error(message);\n          resolve('');\n        }\n      });\n    }\n\n    function dataAsUrl(content, type) {\n      return 'data:' + type + ';base64,' + content;\n    }\n\n    function escape(string) {\n      return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n    }\n\n    function delay(ms) {\n      return function (arg) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(arg);\n          }, ms);\n        });\n      };\n    }\n\n    function asArray(arrayLike) {\n      var array = [];\n      var length = arrayLike.length;\n\n      for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n\n      return array;\n    }\n\n    function escapeXhtml(string, escapePercentSign) {\n      if (escapePercentSign) {\n        string = string.replace(/%/g, '%25');\n      }\n\n      return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n    }\n\n    function width(node) {\n      var leftBorder = px(node, 'border-left-width');\n      var rightBorder = px(node, 'border-right-width');\n      return node.scrollWidth + leftBorder + rightBorder;\n    }\n\n    function height(node) {\n      var topBorder = px(node, 'border-top-width');\n      var bottomBorder = px(node, 'border-bottom-width');\n      return node.scrollHeight + topBorder + bottomBorder;\n    }\n\n    function px(node, styleProperty) {\n      var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n      return parseFloat(value.replace('px', ''));\n    }\n  }\n\n  function newInliner() {\n    var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n    return {\n      inlineAll: inlineAll,\n      shouldProcess: shouldProcess,\n      impl: {\n        readUrls: readUrls,\n        inline: inline\n      }\n    };\n\n    function shouldProcess(string) {\n      return string.search(URL_REGEX) !== -1;\n    }\n\n    function readUrls(string) {\n      var result = [];\n      var match;\n\n      while ((match = URL_REGEX.exec(string)) !== null) {\n        result.push(match[1]);\n      }\n\n      return result.filter(function (url) {\n        return !util.isDataUrl(url);\n      });\n    }\n\n    function inline(string, url, baseUrl, get) {\n      return Promise.resolve(url).then(function (url) {\n        return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n      }).then(get || util.getAndEncode).then(function (data) {\n        return util.dataAsUrl(data, util.mimeType(url));\n      }).then(function (dataUrl) {\n        return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n      });\n\n      function urlAsRegex(url) {\n        return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n      }\n    }\n\n    function inlineAll(string, baseUrl, get) {\n      if (nothingToInline()) return Promise.resolve(string);\n      return Promise.resolve(string).then(readUrls).then(function (urls) {\n        var done = Promise.resolve(string);\n        urls.forEach(function (url) {\n          done = done.then(function (string) {\n            return inline(string, url, baseUrl, get);\n          });\n        });\n        return done;\n      });\n\n      function nothingToInline() {\n        return !shouldProcess(string);\n      }\n    }\n  }\n\n  function newFontFaces() {\n    return {\n      resolveAll: resolveAll,\n      impl: {\n        readAll: readAll\n      }\n    };\n\n    function resolveAll() {\n      return readAll().then(function (webFonts) {\n        return Promise.all(webFonts.map(function (webFont) {\n          return webFont.resolve();\n        }));\n      }).then(function (cssStrings) {\n        return cssStrings.join('\\n');\n      });\n    }\n\n    function readAll() {\n      return Promise.resolve(util.asArray(document.styleSheets)).then(getCssRules).then(selectWebFontRules).then(function (rules) {\n        return rules.map(newWebFont);\n      });\n\n      function selectWebFontRules(cssRules) {\n        return cssRules.filter(function (rule) {\n          return rule.type === CSSRule.FONT_FACE_RULE;\n        }).filter(function (rule) {\n          return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n        });\n      }\n\n      function getCssRules(styleSheets) {\n        var cssRules = [];\n        styleSheets.forEach(function (sheet) {\n          try {\n            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n          } catch (e) {\n            console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n          }\n        });\n        return cssRules;\n      }\n\n      function newWebFont(webFontRule) {\n        return {\n          resolve: function resolve() {\n            var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n            return inliner.inlineAll(webFontRule.cssText, baseUrl);\n          },\n          src: function () {\n            return webFontRule.style.getPropertyValue('src');\n          }\n        };\n      }\n    }\n  }\n\n  function newImages() {\n    return {\n      inlineAll: inlineAll,\n      impl: {\n        newImage: newImage\n      }\n    };\n\n    function newImage(element) {\n      return {\n        inline: inline\n      };\n\n      function inline(get) {\n        if (util.isDataUrl(element.src)) return Promise.resolve();\n        return Promise.resolve(element.src).then(get || util.getAndEncode).then(function (data) {\n          return util.dataAsUrl(data, util.mimeType(element.src));\n        }).then(function (dataUrl) {\n          return new Promise(function (resolve, reject) {\n            element.onload = resolve;\n            element.onerror = reject;\n            element.src = dataUrl;\n          });\n        });\n      }\n    }\n\n    function inlineAll(node) {\n      if (!(node instanceof Element)) return Promise.resolve(node);\n      return inlineBackground(node).then(function () {\n        if (node instanceof HTMLImageElement) return newImage(node).inline();else return Promise.all(util.asArray(node.childNodes).map(function (child) {\n          return inlineAll(child);\n        }));\n      });\n\n      function inlineBackground(node) {\n        var background = node.style.getPropertyValue('background');\n        if (!background) return Promise.resolve(node);\n        return inliner.inlineAll(background).then(function (inlined) {\n          node.style.setProperty('background', inlined, node.style.getPropertyPriority('background'));\n        }).then(function () {\n          return node;\n        });\n      }\n    }\n  }\n})(this);","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/lib/dom-to-image.js"],"names":["global","util","newUtil","inliner","newInliner","fontFaces","newFontFaces","images","newImages","defaultOptions","imagePlaceholder","undefined","cacheBust","domtoimage","toSvg","toPng","toJpeg","toBlob","toPixelData","impl","options","module","exports","node","copyOptions","Promise","resolve","then","cloneNode","filter","embedFonts","inlineImages","applyOptions","clone","makeSvgDataUri","width","height","escapePercentSign","bgcolor","style","backgroundColor","Object","keys","forEach","property","draw","canvas","getContext","getImageData","data","toDataURL","quality","canvasToBlob","domNode","makeImage","image","newCanvas","drawImage","document","createElement","ctx","fillStyle","fillRect","root","makeNodeCopy","cloneChildren","processClone","HTMLCanvasElement","original","children","childNodes","length","cloneChildrenInOrder","asArray","parent","done","child","childClone","appendChild","Element","cloneStyle","clonePseudoElements","copyUserInput","fixSvg","copyStyle","window","getComputedStyle","source","target","cssText","copyProperties","name","setProperty","getPropertyValue","getPropertyPriority","element","clonePseudoElement","content","className","uid","styleElement","formatPseudoElementStyle","selector","formatCssText","formatCssProperties","createTextNode","map","formatProperty","join","HTMLTextAreaElement","innerHTML","value","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","resolveAll","styleNode","inlineAll","XMLSerializer","serializeToString","str","escapeXhtml","xhtml","foreignObject","svg","escape","parseExtension","mimeType","dataAsUrl","isDataUrl","resolveUrl","getAndEncode","delay","mimes","WOFF","JPEG","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","url","match","exec","extension","toLowerCase","search","binaryString","atob","split","binaryArray","Uint8Array","i","charCodeAt","Blob","type","baseUrl","doc","implementation","createHTMLDocument","base","head","a","body","href","index","fourRandomChars","Math","random","pow","toString","slice","uri","reject","Image","onload","onerror","src","TIMEOUT","test","Date","getTime","request","XMLHttpRequest","onreadystatechange","ontimeout","timeout","responseType","open","send","placeholder","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","message","console","error","string","replace","ms","arg","setTimeout","arrayLike","array","push","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","styleProperty","parseFloat","URL_REGEX","shouldProcess","readUrls","inline","get","dataUrl","urlAsRegex","RegExp","nothingToInline","urls","readAll","webFonts","all","webFont","cssStrings","styleSheets","getCssRules","selectWebFontRules","rules","newWebFont","cssRules","rule","CSSRule","FONT_FACE_RULE","sheet","bind","e","log","webFontRule","parentStyleSheet","newImage","inlineBackground","HTMLImageElement","background","inlined"],"mappings":"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","sourcesContent":["/* eslint-disable */\n/**\n * https://github.com/tsayen/dom-to-image/blob/master/src/dom-to-image.js\n */\n; (function (global) {\n  'use strict'\n\n  var util = newUtil()\n  var inliner = newInliner()\n  var fontFaces = newFontFaces()\n  var images = newImages()\n\n  // Default impl options\n  var defaultOptions = {\n    // Default is to fail on error, no placeholder\n    imagePlaceholder: undefined,\n    // Default cache bust is false, it will use the cache\n    cacheBust: false,\n  }\n\n  var domtoimage = {\n    toSvg: toSvg,\n    toPng: toPng,\n    toJpeg: toJpeg,\n    toBlob: toBlob,\n    toPixelData: toPixelData,\n    impl: {\n      fontFaces: fontFaces,\n      images: images,\n      util: util,\n      inliner: inliner,\n      options: {},\n    },\n  }\n\n  if (typeof module !== 'undefined') module.exports = domtoimage\n  else global.domtoimage = domtoimage\n\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options\n   * @param {Function} options.filter - Should return true if passed node should be included in the output\n   *          (excluding node means excluding it's children as well). Not called on the root node.\n   * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n   * @param {Number} options.width - width to be applied to node before rendering.\n   * @param {Number} options.height - height to be applied to node before rendering.\n   * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n   * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n              defaults to 1.0.\n   * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n   * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n   * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n   * */\n  function toSvg(node, options) {\n    options = options || {}\n    copyOptions(options)\n    return Promise.resolve(node)\n      .then(function (node) {\n        return cloneNode(node, options.filter, true)\n      })\n      .then(embedFonts)\n      .then(inlineImages)\n      .then(applyOptions)\n      .then(function (clone) {\n        return makeSvgDataUri(\n          clone,\n          options.width || util.width(node),\n          options.height || util.height(node),\n          options.escapePercentSign\n        )\n      })\n\n    function applyOptions(clone) {\n      if (options.bgcolor) clone.style.backgroundColor = options.bgcolor\n\n      if (options.width) clone.style.width = options.width + 'px'\n      if (options.height) clone.style.height = options.height + 'px'\n\n      if (options.style)\n        Object.keys(options.style).forEach(function (property) {\n          clone.style[property] = options.style[property]\n        })\n\n      return clone\n    }\n  }\n\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n   * */\n  function toPixelData(node, options) {\n    return draw(node, options || {}).then(function (canvas) {\n      return canvas.getContext('2d').getImageData(0, 0, util.width(node), util.height(node)).data\n    })\n  }\n\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n   * */\n  function toPng(node, options) {\n    options = options || {}\n    options.escapePercentSign = true\n    return draw(node, options).then(function (canvas) {\n      return canvas.toDataURL()\n    })\n  }\n\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n   * */\n  function toJpeg(node, options) {\n    options = options || {}\n    return draw(node, options).then(function (canvas) {\n      return canvas.toDataURL('image/jpeg', options.quality || 1.0)\n    })\n  }\n\n  /**\n   * @param {Node} node - The DOM Node object to render\n   * @param {Object} options - Rendering options, @see {@link toSvg}\n   * @return {Promise} - A promise that is fulfilled with a PNG image blob\n   * */\n  function toBlob(node, options) {\n    options = options || {}\n    options.escapePercentSign = true\n    return draw(node, options).then(util.canvasToBlob)\n  }\n\n  function copyOptions(options) {\n    // Copy options to impl options for use in impl\n    if (typeof options.imagePlaceholder === 'undefined') {\n      domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder\n    } else {\n      domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder\n    }\n\n    if (typeof options.cacheBust === 'undefined') {\n      domtoimage.impl.options.cacheBust = defaultOptions.cacheBust\n    } else {\n      domtoimage.impl.options.cacheBust = options.cacheBust\n    }\n  }\n\n  function draw(domNode, options) {\n    return (\n      toSvg(domNode, options)\n        .then(util.makeImage)\n        // .then(util.delay(100))\n        .then(function (image) {\n          var canvas = newCanvas(domNode)\n          canvas.getContext('2d').drawImage(image, 0, 0)\n          return canvas\n        })\n    )\n\n    function newCanvas(domNode) {\n      var canvas = document.createElement('canvas')\n      canvas.width = options.width || util.width(domNode)\n      canvas.height = options.height || util.height(domNode)\n\n      if (options.bgcolor) {\n        var ctx = canvas.getContext('2d')\n        ctx.fillStyle = options.bgcolor\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n      }\n\n      return canvas\n    }\n  }\n\n  function cloneNode(node, filter, root) {\n    if (!root && filter && !filter(node)) return Promise.resolve()\n\n    return Promise.resolve(node)\n      .then(makeNodeCopy)\n      .then(function (clone) {\n        return cloneChildren(node, clone, filter)\n      })\n      .then(function (clone) {\n        return processClone(node, clone)\n      })\n\n    function makeNodeCopy(node) {\n      if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL())\n      return node.cloneNode(false)\n    }\n\n    function cloneChildren(original, clone, filter) {\n      var children = original.childNodes\n      if (children.length === 0) return Promise.resolve(clone)\n\n      return cloneChildrenInOrder(clone, util.asArray(children), filter).then(function () {\n        return clone\n      })\n\n      function cloneChildrenInOrder(parent, children, filter) {\n        var done = Promise.resolve()\n        children.forEach(function (child) {\n          done = done\n            .then(function () {\n              return cloneNode(child, filter)\n            })\n            .then(function (childClone) {\n              if (childClone) parent.appendChild(childClone)\n            })\n        })\n        return done\n      }\n    }\n\n    function processClone(original, clone) {\n      if (!(clone instanceof Element)) return clone\n\n      return Promise.resolve()\n        .then(cloneStyle)\n        .then(clonePseudoElements)\n        .then(copyUserInput)\n        .then(fixSvg)\n        .then(function () {\n          return clone\n        })\n\n      function cloneStyle() {\n        copyStyle(window.getComputedStyle(original), clone.style)\n\n        function copyStyle(source, target) {\n          if (source.cssText) target.cssText = source.cssText\n          else copyProperties(source, target)\n\n          function copyProperties(source, target) {\n            util.asArray(source).forEach(function (name) {\n              target.setProperty(\n                name,\n                source.getPropertyValue(name),\n                source.getPropertyPriority(name)\n              )\n            })\n          }\n        }\n      }\n\n      function clonePseudoElements() {\n        ;[':before', ':after'].forEach(function (element) {\n          clonePseudoElement(element)\n        })\n\n        function clonePseudoElement(element) {\n          var style = window.getComputedStyle(original, element)\n          var content = style.getPropertyValue('content')\n\n          if (content === '' || content === 'none') return\n\n          var className = util.uid()\n          clone.className = clone.className + ' ' + className\n          var styleElement = document.createElement('style')\n          styleElement.appendChild(formatPseudoElementStyle(className, element, style))\n          clone.appendChild(styleElement)\n\n          function formatPseudoElementStyle(className, element, style) {\n            var selector = '.' + className + ':' + element\n            var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style)\n            return document.createTextNode(selector + '{' + cssText + '}')\n\n            function formatCssText(style) {\n              var content = style.getPropertyValue('content')\n              return style.cssText + ' content: ' + content + ';'\n            }\n\n            function formatCssProperties(style) {\n              return util.asArray(style).map(formatProperty).join('; ') + ';'\n\n              function formatProperty(name) {\n                return (\n                  name +\n                  ': ' +\n                  style.getPropertyValue(name) +\n                  (style.getPropertyPriority(name) ? ' !important' : '')\n                )\n              }\n            }\n          }\n        }\n      }\n\n      function copyUserInput() {\n        if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value\n        if (original instanceof HTMLInputElement) clone.setAttribute('value', original.value)\n      }\n\n      function fixSvg() {\n        if (!(clone instanceof SVGElement)) return\n        clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n\n        if (!(clone instanceof SVGRectElement)) return\n          ;['width', 'height'].forEach(function (attribute) {\n            var value = clone.getAttribute(attribute)\n            if (!value) return\n\n            clone.style.setProperty(attribute, value)\n          })\n      }\n    }\n  }\n\n  function embedFonts(node) {\n    return fontFaces.resolveAll().then(function (cssText) {\n      var styleNode = document.createElement('style')\n      node.appendChild(styleNode)\n      styleNode.appendChild(document.createTextNode(cssText))\n      return node\n    })\n  }\n\n  function inlineImages(node) {\n    return images.inlineAll(node).then(function () {\n      return node\n    })\n  }\n\n  function makeSvgDataUri(node, width, height, escapePercentSign) {\n    return Promise.resolve(node)\n      .then(function (node) {\n        node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml')\n        // 利用XMLSerializer对象把XML文档或者Node对象转换为为解析的XML标记的一个字符串\n        // 将dom => xhtml\n        return new XMLSerializer().serializeToString(node)\n      })\n      .then(function (str) {\n        return util.escapeXhtml(str, escapePercentSign)\n      })\n      .then(function (xhtml) {\n        return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>'\n      })\n      // 使用SVG的foreignObject\n      .then(function (foreignObject) {\n        return (\n          '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n          width +\n          '\" height=\"' +\n          height +\n          '\">' +\n          foreignObject +\n          '</svg>'\n        )\n      })\n      // 将图片转为svg格式\n      .then(function (svg) {\n        return 'data:image/svg+xml;charset=utf-8,' + svg\n      })\n  }\n\n  function newUtil() {\n    return {\n      escape: escape,\n      parseExtension: parseExtension,\n      mimeType: mimeType,\n      dataAsUrl: dataAsUrl,\n      isDataUrl: isDataUrl,\n      canvasToBlob: canvasToBlob,\n      resolveUrl: resolveUrl,\n      getAndEncode: getAndEncode,\n      uid: uid(),\n      delay: delay,\n      asArray: asArray,\n      escapeXhtml: escapeXhtml,\n      makeImage: makeImage,\n      width: width,\n      height: height,\n    }\n\n    function mimes() {\n      /*\n       * Only WOFF and EOT mime types for fonts are 'real'\n       * see http://www.iana.org/assignments/media-types/media-types.xhtml\n       */\n      var WOFF = 'application/font-woff'\n      var JPEG = 'image/jpeg'\n\n      return {\n        woff: WOFF,\n        woff2: WOFF,\n        ttf: 'application/font-truetype',\n        eot: 'application/vnd.ms-fontobject',\n        png: 'image/png',\n        jpg: JPEG,\n        jpeg: JPEG,\n        gif: 'image/gif',\n        tiff: 'image/tiff',\n        svg: 'image/svg+xml',\n      }\n    }\n\n    function parseExtension(url) {\n      var match = /\\.([^\\.\\/]*?)$/g.exec(url)\n      if (match) return match[1]\n      else return ''\n    }\n\n    function mimeType(url) {\n      var extension = parseExtension(url).toLowerCase()\n      return mimes()[extension] || ''\n    }\n\n    function isDataUrl(url) {\n      return url.search(/^(data:)/) !== -1\n    }\n\n    function toBlob(canvas) {\n      return new Promise(function (resolve) {\n        var binaryString = window.atob(canvas.toDataURL().split(',')[1])\n        var length = binaryString.length\n        var binaryArray = new Uint8Array(length)\n\n        for (var i = 0; i < length; i++) binaryArray[i] = binaryString.charCodeAt(i)\n\n        resolve(\n          new Blob([binaryArray], {\n            type: 'image/png',\n          })\n        )\n      })\n    }\n\n    function canvasToBlob(canvas) {\n      if (canvas.toBlob)\n        return new Promise(function (resolve) {\n          canvas.toBlob(resolve)\n        })\n\n      return toBlob(canvas)\n    }\n\n    function resolveUrl(url, baseUrl) {\n      var doc = document.implementation.createHTMLDocument()\n      var base = doc.createElement('base')\n      doc.head.appendChild(base)\n      var a = doc.createElement('a')\n      doc.body.appendChild(a)\n      base.href = baseUrl\n      a.href = url\n      return a.href\n    }\n\n    function uid() {\n      var index = 0\n\n      return function () {\n        return 'u' + fourRandomChars() + index++\n\n        function fourRandomChars() {\n          /* see http://stackoverflow.com/a/6248722/2519373 */\n          return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4)\n        }\n      }\n    }\n\n    function makeImage(uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image()\n        image.onload = function () {\n          resolve(image)\n        }\n        image.onerror = reject\n        image.src = uri\n      })\n    }\n\n    function getAndEncode(url) {\n      var TIMEOUT = 30000\n      if (domtoimage.impl.options.cacheBust) {\n        // Cache bypass so we dont have CORS issues with cached images\n        // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n        url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime()\n      }\n\n      return new Promise(function (resolve) {\n        var request = new XMLHttpRequest()\n\n        request.onreadystatechange = done\n        request.ontimeout = timeout\n        request.responseType = 'blob'\n        request.timeout = TIMEOUT\n        request.open('GET', url, true)\n        request.send()\n\n        var placeholder\n        if (domtoimage.impl.options.imagePlaceholder) {\n          var split = domtoimage.impl.options.imagePlaceholder.split(/,/)\n          if (split && split[1]) {\n            placeholder = split[1]\n          }\n        }\n\n        function done() {\n          if (request.readyState !== 4) return\n\n          if (request.status !== 200) {\n            if (placeholder) {\n              resolve(placeholder)\n            } else {\n              fail('cannot fetch resource: ' + url + ', status: ' + request.status)\n            }\n\n            return\n          }\n\n          var encoder = new FileReader()\n          encoder.onloadend = function () {\n            var content = encoder.result.split(/,/)[1]\n            resolve(content)\n          }\n          encoder.readAsDataURL(request.response)\n        }\n\n        function timeout() {\n          if (placeholder) {\n            resolve(placeholder)\n          } else {\n            fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url)\n          }\n        }\n\n        function fail(message) {\n          console.error(message)\n          resolve('')\n        }\n      })\n    }\n\n    function dataAsUrl(content, type) {\n      return 'data:' + type + ';base64,' + content\n    }\n\n    function escape(string) {\n      return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1')\n    }\n\n    function delay(ms) {\n      return function (arg) {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            resolve(arg)\n          }, ms)\n        })\n      }\n    }\n\n    function asArray(arrayLike) {\n      var array = []\n      var length = arrayLike.length\n      for (var i = 0; i < length; i++) array.push(arrayLike[i])\n      return array\n    }\n\n    function escapeXhtml(string, escapePercentSign) {\n      if (escapePercentSign) {\n        string = string.replace(/%/g, '%25')\n      }\n      return string.replace(/#/g, '%23').replace(/\\n/g, '%0A')\n    }\n\n    function width(node) {\n      var leftBorder = px(node, 'border-left-width')\n      var rightBorder = px(node, 'border-right-width')\n      return node.scrollWidth + leftBorder + rightBorder\n    }\n\n    function height(node) {\n      var topBorder = px(node, 'border-top-width')\n      var bottomBorder = px(node, 'border-bottom-width')\n      return node.scrollHeight + topBorder + bottomBorder\n    }\n\n    function px(node, styleProperty) {\n      var value = window.getComputedStyle(node).getPropertyValue(styleProperty)\n      return parseFloat(value.replace('px', ''))\n    }\n  }\n\n  function newInliner() {\n    var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g\n\n    return {\n      inlineAll: inlineAll,\n      shouldProcess: shouldProcess,\n      impl: {\n        readUrls: readUrls,\n        inline: inline,\n      },\n    }\n\n    function shouldProcess(string) {\n      return string.search(URL_REGEX) !== -1\n    }\n\n    function readUrls(string) {\n      var result = []\n      var match\n      while ((match = URL_REGEX.exec(string)) !== null) {\n        result.push(match[1])\n      }\n      return result.filter(function (url) {\n        return !util.isDataUrl(url)\n      })\n    }\n\n    function inline(string, url, baseUrl, get) {\n      return Promise.resolve(url)\n        .then(function (url) {\n          return baseUrl ? util.resolveUrl(url, baseUrl) : url\n        })\n        .then(get || util.getAndEncode)\n        .then(function (data) {\n          return util.dataAsUrl(data, util.mimeType(url))\n        })\n        .then(function (dataUrl) {\n          return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3')\n        })\n\n      function urlAsRegex(url) {\n        return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g')\n      }\n    }\n\n    function inlineAll(string, baseUrl, get) {\n      if (nothingToInline()) return Promise.resolve(string)\n\n      return Promise.resolve(string)\n        .then(readUrls)\n        .then(function (urls) {\n          var done = Promise.resolve(string)\n          urls.forEach(function (url) {\n            done = done.then(function (string) {\n              return inline(string, url, baseUrl, get)\n            })\n          })\n          return done\n        })\n\n      function nothingToInline() {\n        return !shouldProcess(string)\n      }\n    }\n  }\n\n  function newFontFaces() {\n    return {\n      resolveAll: resolveAll,\n      impl: {\n        readAll: readAll,\n      },\n    }\n\n    function resolveAll() {\n      return readAll()\n        .then(function (webFonts) {\n          return Promise.all(\n            webFonts.map(function (webFont) {\n              return webFont.resolve()\n            })\n          )\n        })\n        .then(function (cssStrings) {\n          return cssStrings.join('\\n')\n        })\n    }\n\n    function readAll() {\n      return Promise.resolve(util.asArray(document.styleSheets))\n        .then(getCssRules)\n        .then(selectWebFontRules)\n        .then(function (rules) {\n          return rules.map(newWebFont)\n        })\n\n      function selectWebFontRules(cssRules) {\n        return cssRules\n          .filter(function (rule) {\n            return rule.type === CSSRule.FONT_FACE_RULE\n          })\n          .filter(function (rule) {\n            return inliner.shouldProcess(rule.style.getPropertyValue('src'))\n          })\n      }\n\n      function getCssRules(styleSheets) {\n        var cssRules = []\n        styleSheets.forEach(function (sheet) {\n          try {\n            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules))\n          } catch (e) {\n            console.log('Error while reading CSS rules from ' + sheet.href, e.toString())\n          }\n        })\n        return cssRules\n      }\n\n      function newWebFont(webFontRule) {\n        return {\n          resolve: function resolve() {\n            var baseUrl = (webFontRule.parentStyleSheet || {}).href\n            return inliner.inlineAll(webFontRule.cssText, baseUrl)\n          },\n          src: function () {\n            return webFontRule.style.getPropertyValue('src')\n          },\n        }\n      }\n    }\n  }\n\n  function newImages() {\n    return {\n      inlineAll: inlineAll,\n      impl: {\n        newImage: newImage,\n      },\n    }\n\n    function newImage(element) {\n      return {\n        inline: inline,\n      }\n\n      function inline(get) {\n        if (util.isDataUrl(element.src)) return Promise.resolve()\n\n        return Promise.resolve(element.src)\n          .then(get || util.getAndEncode)\n          .then(function (data) {\n            return util.dataAsUrl(data, util.mimeType(element.src))\n          })\n          .then(function (dataUrl) {\n            return new Promise(function (resolve, reject) {\n              element.onload = resolve\n              element.onerror = reject\n              element.src = dataUrl\n            })\n          })\n      }\n    }\n\n    function inlineAll(node) {\n      if (!(node instanceof Element)) return Promise.resolve(node)\n\n      return inlineBackground(node).then(function () {\n        if (node instanceof HTMLImageElement) return newImage(node).inline()\n        else\n          return Promise.all(\n            util.asArray(node.childNodes).map(function (child) {\n              return inlineAll(child)\n            })\n          )\n      })\n\n      function inlineBackground(node) {\n        var background = node.style.getPropertyValue('background')\n\n        if (!background) return Promise.resolve(node)\n\n        return inliner\n          .inlineAll(background)\n          .then(function (inlined) {\n            node.style.setProperty(\n              'background',\n              inlined,\n              node.style.getPropertyPriority('background')\n            )\n          })\n          .then(function () {\n            return node\n          })\n      }\n    }\n  }\n})(this)\n"]},"metadata":{},"sourceType":"script"}