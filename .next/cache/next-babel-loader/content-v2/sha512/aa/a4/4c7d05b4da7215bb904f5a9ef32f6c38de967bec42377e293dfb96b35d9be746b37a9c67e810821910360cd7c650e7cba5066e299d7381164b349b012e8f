{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nif (firebase.apps.length === 0) {\n  if (process.env.NEXT_PUBLIC_FIREBASE_API_KEY && process.env.NEXT_PUBLIC_FIREBASE_FE_APP_ID) {\n    firebase.initializeApp({\n      apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n      authDomain: \"\".concat(process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID, \".firebaseapp.com\"),\n      databaseURL: \"https://\".concat(process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID, \".firebaseio.com\"),\n      projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n      storageBucket: \"\".concat(process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID, \".appspot.com\"),\n      messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n      appId: process.env.NEXT_PUBLIC_FIREBASE_FE_APP_ID\n    });\n  }\n}\n\nexport function logout() {\n  return firebase.auth().signOut()[\"catch\"](console.error);\n}\nexport function login(provider) {\n  return firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function () {\n    return firebase.auth().signInWithPopup(provider);\n  })[\"catch\"](console.error);\n}\nexport function loginGitHub() {\n  var provider = new firebase.auth.GithubAuthProvider();\n  provider.setCustomParameters({\n    allow_signup: 'true'\n  });\n  return login(provider);\n}\nexport default firebase.apps.length ? firebase : null;","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/lib/client.js"],"names":["firebase","apps","length","process","env","NEXT_PUBLIC_FIREBASE_API_KEY","NEXT_PUBLIC_FIREBASE_FE_APP_ID","initializeApp","apiKey","authDomain","NEXT_PUBLIC_FIREBASE_PROJECT_ID","databaseURL","projectId","storageBucket","messagingSenderId","NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID","appId","logout","auth","signOut","console","error","login","provider","setPersistence","Auth","Persistence","LOCAL","then","signInWithPopup","loginGitHub","GithubAuthProvider","setCustomParameters","allow_signup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;;AAEA,IAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,MAAIC,OAAO,CAACC,GAAR,CAAYC,4BAAZ,IAA4CF,OAAO,CAACC,GAAR,CAAYE,8BAA5D,EAA4F;AAC1FN,IAAAA,QAAQ,CAACO,aAAT,CAAuB;AACrBC,MAAAA,MAAM,EAAEL,OAAO,CAACC,GAAR,CAAYC,4BADC;AAErBI,MAAAA,UAAU,YAAKN,OAAO,CAACC,GAAR,CAAYM,+BAAjB,qBAFW;AAGrBC,MAAAA,WAAW,oBAAaR,OAAO,CAACC,GAAR,CAAYM,+BAAzB,oBAHU;AAIrBE,MAAAA,SAAS,EAAET,OAAO,CAACC,GAAR,CAAYM,+BAJF;AAKrBG,MAAAA,aAAa,YAAKV,OAAO,CAACC,GAAR,CAAYM,+BAAjB,iBALQ;AAMrBI,MAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,wCANV;AAOrBC,MAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYE;AAPE,KAAvB;AASD;AACF;;AAED,OAAO,SAASW,MAAT,GAAkB;AACvB,SAAOjB,QAAQ,CAACkB,IAAT,GAAgBC,OAAhB,YAAgCC,OAAO,CAACC,KAAxC,CAAP;AACD;AAED,OAAO,SAASC,KAAT,CAAeC,QAAf,EAAyB;AAC9B,SAAOvB,QAAQ,CACZkB,IADI,GAEJM,cAFI,CAEWxB,QAAQ,CAACkB,IAAT,CAAcO,IAAd,CAAmBC,WAAnB,CAA+BC,KAF1C,EAGJC,IAHI,CAGC;AAAA,WAAM5B,QAAQ,CAACkB,IAAT,GAAgBW,eAAhB,CAAgCN,QAAhC,CAAN;AAAA,GAHD,WAIEH,OAAO,CAACC,KAJV,CAAP;AAKD;AAED,OAAO,SAASS,WAAT,GAAuB;AAC5B,MAAMP,QAAQ,GAAG,IAAIvB,QAAQ,CAACkB,IAAT,CAAca,kBAAlB,EAAjB;AACAR,EAAAA,QAAQ,CAACS,mBAAT,CAA6B;AAC3BC,IAAAA,YAAY,EAAE;AADa,GAA7B;AAGA,SAAOX,KAAK,CAACC,QAAD,CAAZ;AACD;AAED,eAAevB,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuBF,QAAvB,GAAkC,IAAjD","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nif (firebase.apps.length === 0) {\n  if (process.env.NEXT_PUBLIC_FIREBASE_API_KEY && process.env.NEXT_PUBLIC_FIREBASE_FE_APP_ID) {\n    firebase.initializeApp({\n      apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n      authDomain: `${process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID}.firebaseapp.com`,\n      databaseURL: `https://${process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID}.firebaseio.com`,\n      projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n      storageBucket: `${process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID}.appspot.com`,\n      messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n      appId: process.env.NEXT_PUBLIC_FIREBASE_FE_APP_ID,\n    })\n  }\n}\n\nexport function logout() {\n  return firebase.auth().signOut().catch(console.error)\n}\n\nexport function login(provider) {\n  return firebase\n    .auth()\n    .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    .then(() => firebase.auth().signInWithPopup(provider))\n    .catch(console.error)\n}\n\nexport function loginGitHub() {\n  const provider = new firebase.auth.GithubAuthProvider()\n  provider.setCustomParameters({\n    allow_signup: 'true',\n  })\n  return login(provider)\n}\n\nexport default firebase.apps.length ? firebase : null\n"]},"metadata":{},"sourceType":"module"}