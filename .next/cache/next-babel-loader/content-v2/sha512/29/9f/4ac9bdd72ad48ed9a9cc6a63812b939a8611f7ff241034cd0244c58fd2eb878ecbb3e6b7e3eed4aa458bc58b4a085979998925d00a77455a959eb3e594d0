{"ast":null,"code":"import _slicedToArray from \"/Users/limengyu/Desktop/private/code/project/show-codes/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/limengyu/Desktop/private/code/project/show-codes/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/limengyu/Desktop/private/code/project/show-codes/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/limengyu/Desktop/private/code/project/show-codes/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport morph from 'morphmorph';\nimport omitBy from 'lodash.omitby';\nimport { htmlUnescape } from 'escape-goat';\nvar SETTINGS_KEY = 'CARBON_STATE';\nvar PRESETS_KEY = 'CARBON_PRESETS';\nvar THEMES_KEY = 'CARBON_THEMES';\n\nvar createAssigner = function createAssigner(key) {\n  var assign = morph.assign(key);\n  return function (v) {\n    return assign(localStorage, JSON.stringify(v));\n  };\n};\n\nvar map = function map(fn) {\n  return function (obj) {\n    return obj.map(fn);\n  };\n};\n\nexport var omit = function omit(keys) {\n  return function (object) {\n    return omitBy(object, function (_, k) {\n      return keys.indexOf(k) > -1;\n    });\n  };\n};\nexport var saveSettings = morph.compose(createAssigner(SETTINGS_KEY), omit(['code', 'backgroundImage', 'backgroundImageSelection', 'themes', 'highlights', 'fontUrl', 'selectedLines', 'name']));\nexport var savePresets = morph.compose(createAssigner(PRESETS_KEY), map(omit(['backgroundImageSelection'])));\nexport var saveThemes = createAssigner(THEMES_KEY);\n\nvar parse = function parse(v) {\n  try {\n    return JSON.parse(v);\n  } catch (e) {// pass\n  }\n};\n\nexport var toggle = function toggle(stateField) {\n  return function (state) {\n    return _defineProperty({}, stateField, !state[stateField]);\n  };\n}; // https://gist.github.com/alexgibson/1704515\n\nexport var escapeHtml = function escapeHtml(s) {\n  if (typeof s === 'string') {\n    return s.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;');\n  }\n};\nexport var unescapeHtml = function unescapeHtml(s) {\n  if (typeof s === 'string') {\n    return htmlUnescape(s).replace(/&#x2F;/g, '/');\n  }\n};\nexport var getSettings = morph.compose(parse, escapeHtml, morph.get(SETTINGS_KEY));\nexport var getPresets = morph.compose(parse, morph.get(PRESETS_KEY));\nexport var getThemes = morph.compose(parse, morph.get(THEMES_KEY));\nexport var clearSettings = function clearSettings() {\n  return localStorage.removeItem(SETTINGS_KEY);\n};\nexport var fileToDataURL = function fileToDataURL(blob) {\n  return new Promise(function (res) {\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      return res(e.target.result);\n    };\n\n    reader.readAsDataURL(blob);\n  });\n};\nexport var fileToJSON = function fileToJSON(blob) {\n  return new Promise(function (res) {\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      return res(parse(e.target.result));\n    };\n\n    reader.readAsText(blob);\n  });\n};\nexport var formatCode = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(code) {\n    var prettier, babylonParser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return import('prettier/standalone');\n\n          case 2:\n            prettier = _context.sent;\n            _context.next = 5;\n            return import('prettier/parser-babel');\n\n          case 5:\n            babylonParser = _context.sent;\n            return _context.abrupt(\"return\", prettier.format(code, {\n              parser: 'babel',\n              plugins: [babylonParser],\n              semi: false,\n              singleQuote: true\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function formatCode(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var stringifyRGBA = function stringifyRGBA(obj) {\n  return \"rgba(\".concat(obj.r, \",\").concat(obj.g, \",\").concat(obj.b, \",\").concat(obj.a, \")\");\n};\nexport var generateId = function generateId() {\n  return Math.random().toString(36).slice(2);\n};\nexport function dataURLtoBlob(dataurl) {\n  var _dataurl$split = dataurl.split(','),\n      _dataurl$split2 = _slicedToArray(_dataurl$split, 2),\n      first = _dataurl$split2[0],\n      second = _dataurl$split2[1];\n\n  var mime = first.match(/:(.*?);/)[1];\n  var bstr = atob(second);\n  var n = bstr.length;\n  var u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new Blob([u8arr], {\n    type: mime\n  });\n}","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/lib/util.js"],"names":["morph","omitBy","htmlUnescape","SETTINGS_KEY","PRESETS_KEY","THEMES_KEY","createAssigner","key","assign","v","localStorage","JSON","stringify","map","fn","obj","omit","keys","object","_","k","indexOf","saveSettings","compose","savePresets","saveThemes","parse","e","toggle","stateField","state","escapeHtml","s","replace","unescapeHtml","getSettings","get","getPresets","getThemes","clearSettings","removeItem","fileToDataURL","blob","Promise","res","reader","FileReader","onload","target","result","readAsDataURL","fileToJSON","readAsText","formatCode","code","prettier","babylonParser","format","parser","plugins","semi","singleQuote","stringifyRGBA","r","g","b","a","generateId","Math","random","toString","slice","dataURLtoBlob","dataurl","split","first","second","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","type"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,IAAMC,YAAY,GAAG,cAArB;AACA,IAAMC,WAAW,GAAG,gBAApB;AACA,IAAMC,UAAU,GAAG,eAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAI;AAC5B,MAAMC,MAAM,GAAGR,KAAK,CAACQ,MAAN,CAAaD,GAAb,CAAf;AAEA,SAAO,UAAAE,CAAC;AAAA,WAAID,MAAM,CAACE,YAAD,EAAeC,IAAI,CAACC,SAAL,CAAeH,CAAf,CAAf,CAAV;AAAA,GAAR;AACD,CAJD;;AAMA,IAAMI,GAAG,GAAG,SAANA,GAAM,CAAAC,EAAE;AAAA,SAAI,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACF,GAAJ,CAAQC,EAAR,CAAJ;AAAA,GAAP;AAAA,CAAd;;AACA,OAAO,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAAC,IAAI;AAAA,SAAI,UAAAC,MAAM;AAAA,WAAIjB,MAAM,CAACiB,MAAD,EAAS,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUH,IAAI,CAACI,OAAL,CAAaD,CAAb,IAAkB,CAAC,CAA7B;AAAA,KAAT,CAAV;AAAA,GAAV;AAAA,CAAjB;AAEP,OAAO,IAAME,YAAY,GAAGtB,KAAK,CAACuB,OAAN,CAC1BjB,cAAc,CAACH,YAAD,CADY,EAE1Ba,IAAI,CAAC,CACH,MADG,EAEH,iBAFG,EAGH,0BAHG,EAIH,QAJG,EAKH,YALG,EAMH,SANG,EAOH,eAPG,EAQH,MARG,CAAD,CAFsB,CAArB;AAaP,OAAO,IAAMQ,WAAW,GAAGxB,KAAK,CAACuB,OAAN,CACzBjB,cAAc,CAACF,WAAD,CADW,EAEzBS,GAAG,CAACG,IAAI,CAAC,CAAC,0BAAD,CAAD,CAAL,CAFsB,CAApB;AAIP,OAAO,IAAMS,UAAU,GAAGnB,cAAc,CAACD,UAAD,CAAjC;;AAEP,IAAMqB,KAAK,GAAG,SAARA,KAAQ,CAAAjB,CAAC,EAAI;AACjB,MAAI;AACF,WAAOE,IAAI,CAACe,KAAL,CAAWjB,CAAX,CAAP;AACD,GAFD,CAEE,OAAOkB,CAAP,EAAU,CACV;AACD;AACF,CAND;;AAQA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,UAAU;AAAA,SAAI,UAAAC,KAAK;AAAA,+BAAQD,UAAR,EAAqB,CAACC,KAAK,CAACD,UAAD,CAA3B;AAAA,GAAT;AAAA,CAAzB,C,CAEP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAAC,CAAC,EAAI;AAC7B,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,WAAOA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,MAAhB,EAAwBA,OAAxB,CAAgC,IAAhC,EAAsC,MAAtC,EAA8CA,OAA9C,CAAsD,KAAtD,EAA6D,QAA7D,CAAP;AACD;AACF,CAJM;AAMP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAF,CAAC,EAAI;AAC/B,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AACzB,WAAO9B,YAAY,CAAC8B,CAAD,CAAZ,CAAgBC,OAAhB,CAAwB,SAAxB,EAAmC,GAAnC,CAAP;AACD;AACF,CAJM;AAMP,OAAO,IAAME,WAAW,GAAGnC,KAAK,CAACuB,OAAN,CAAcG,KAAd,EAAqBK,UAArB,EAAiC/B,KAAK,CAACoC,GAAN,CAAUjC,YAAV,CAAjC,CAApB;AAEP,OAAO,IAAMkC,UAAU,GAAGrC,KAAK,CAACuB,OAAN,CAAcG,KAAd,EAAqB1B,KAAK,CAACoC,GAAN,CAAUhC,WAAV,CAArB,CAAnB;AAEP,OAAO,IAAMkC,SAAS,GAAGtC,KAAK,CAACuB,OAAN,CAAcG,KAAd,EAAqB1B,KAAK,CAACoC,GAAN,CAAU/B,UAAV,CAArB,CAAlB;AAEP,OAAO,IAAMkC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM7B,YAAY,CAAC8B,UAAb,CAAwBrC,YAAxB,CAAN;AAAA,CAAtB;AAEP,OAAO,IAAMsC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAC/B,IAAIC,OAAJ,CAAY,UAAAC,GAAG,EAAI;AACjB,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAApB,CAAC;AAAA,aAAIiB,GAAG,CAACjB,CAAC,CAACqB,MAAF,CAASC,MAAV,CAAP;AAAA,KAAjB;;AACAJ,IAAAA,MAAM,CAACK,aAAP,CAAqBR,IAArB;AACD,GAJD,CAD+B;AAAA,CAA1B;AAOP,OAAO,IAAMS,UAAU,GAAG,SAAbA,UAAa,CAAAT,IAAI;AAAA,SAC5B,IAAIC,OAAJ,CAAY,UAAAC,GAAG,EAAI;AACjB,QAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAApB,CAAC;AAAA,aAAIiB,GAAG,CAAClB,KAAK,CAACC,CAAC,CAACqB,MAAF,CAASC,MAAV,CAAN,CAAP;AAAA,KAAjB;;AACAJ,IAAAA,MAAM,CAACO,UAAP,CAAkBV,IAAlB;AACD,GAJD,CAD4B;AAAA,CAAvB;AAOP,OAAO,IAAMW,UAAU;AAAA,uEAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD,OAAO,qBAAP,CADC;;AAAA;AAClBC,YAAAA,QADkB;AAAA;AAAA,mBAEI,OAAO,uBAAP,CAFJ;;AAAA;AAElBC,YAAAA,aAFkB;AAAA,6CAIjBD,QAAQ,CAACE,MAAT,CAAgBH,IAAhB,EAAsB;AAC3BI,cAAAA,MAAM,EAAE,OADmB;AAE3BC,cAAAA,OAAO,EAAE,CAACH,aAAD,CAFkB;AAG3BI,cAAAA,IAAI,EAAE,KAHqB;AAI3BC,cAAAA,WAAW,EAAE;AAJc,aAAtB,CAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVR,UAAU;AAAA;AAAA;AAAA,GAAhB;AAYP,OAAO,IAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAAA/C,GAAG;AAAA,wBAAYA,GAAG,CAACgD,CAAhB,cAAqBhD,GAAG,CAACiD,CAAzB,cAA8BjD,GAAG,CAACkD,CAAlC,cAAuClD,GAAG,CAACmD,CAA3C;AAAA,CAAzB;AAEP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAN;AAAA,CAAnB;AAEP,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAAA,uBACbA,OAAO,CAACC,KAAR,CAAc,GAAd,CADa;AAAA;AAAA,MAC9BC,KAD8B;AAAA,MACvBC,MADuB;;AAErC,MAAMC,IAAI,GAAGF,KAAK,CAACG,KAAN,CAAY,SAAZ,EAAuB,CAAvB,CAAb;AACA,MAAMC,IAAI,GAAGC,IAAI,CAACJ,MAAD,CAAjB;AACA,MAAIK,CAAC,GAAGF,IAAI,CAACG,MAAb;AACA,MAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeH,CAAf,CAAd;;AACA,SAAOA,CAAC,EAAR,EAAY;AACVE,IAAAA,KAAK,CAACF,CAAD,CAAL,GAAWF,IAAI,CAACM,UAAL,CAAgBJ,CAAhB,CAAX;AACD;;AACD,SAAO,IAAIK,IAAJ,CAAS,CAACH,KAAD,CAAT,EAAkB;AAAEI,IAAAA,IAAI,EAAEV;AAAR,GAAlB,CAAP;AACD","sourcesContent":["import morph from 'morphmorph'\nimport omitBy from 'lodash.omitby'\nimport { htmlUnescape } from 'escape-goat'\n\nconst SETTINGS_KEY = 'CARBON_STATE'\nconst PRESETS_KEY = 'CARBON_PRESETS'\nconst THEMES_KEY = 'CARBON_THEMES'\n\nconst createAssigner = key => {\n  const assign = morph.assign(key)\n\n  return v => assign(localStorage, JSON.stringify(v))\n}\n\nconst map = fn => obj => obj.map(fn)\nexport const omit = keys => object => omitBy(object, (_, k) => keys.indexOf(k) > -1)\n\nexport const saveSettings = morph.compose(\n  createAssigner(SETTINGS_KEY),\n  omit([\n    'code',\n    'backgroundImage',\n    'backgroundImageSelection',\n    'themes',\n    'highlights',\n    'fontUrl',\n    'selectedLines',\n    'name',\n  ])\n)\nexport const savePresets = morph.compose(\n  createAssigner(PRESETS_KEY),\n  map(omit(['backgroundImageSelection']))\n)\nexport const saveThemes = createAssigner(THEMES_KEY)\n\nconst parse = v => {\n  try {\n    return JSON.parse(v)\n  } catch (e) {\n    // pass\n  }\n}\n\nexport const toggle = stateField => state => ({ [stateField]: !state[stateField] })\n\n// https://gist.github.com/alexgibson/1704515\nexport const escapeHtml = s => {\n  if (typeof s === 'string') {\n    return s.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\//g, '&#x2F;')\n  }\n}\n\nexport const unescapeHtml = s => {\n  if (typeof s === 'string') {\n    return htmlUnescape(s).replace(/&#x2F;/g, '/')\n  }\n}\n\nexport const getSettings = morph.compose(parse, escapeHtml, morph.get(SETTINGS_KEY))\n\nexport const getPresets = morph.compose(parse, morph.get(PRESETS_KEY))\n\nexport const getThemes = morph.compose(parse, morph.get(THEMES_KEY))\n\nexport const clearSettings = () => localStorage.removeItem(SETTINGS_KEY)\n\nexport const fileToDataURL = blob =>\n  new Promise(res => {\n    const reader = new FileReader()\n    reader.onload = e => res(e.target.result)\n    reader.readAsDataURL(blob)\n  })\n\nexport const fileToJSON = blob =>\n  new Promise(res => {\n    const reader = new FileReader()\n    reader.onload = e => res(parse(e.target.result))\n    reader.readAsText(blob)\n  })\n\nexport const formatCode = async code => {\n  const prettier = await import('prettier/standalone')\n  const babylonParser = await import('prettier/parser-babel')\n\n  return prettier.format(code, {\n    parser: 'babel',\n    plugins: [babylonParser],\n    semi: false,\n    singleQuote: true,\n  })\n}\n\nexport const stringifyRGBA = obj => `rgba(${obj.r},${obj.g},${obj.b},${obj.a})`\n\nexport const generateId = () => Math.random().toString(36).slice(2)\n\nexport function dataURLtoBlob(dataurl) {\n  const [first, second] = dataurl.split(',')\n  const mime = first.match(/:(.*?);/)[1]\n  const bstr = atob(second)\n  let n = bstr.length\n  const u8arr = new Uint8Array(n)\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n)\n  }\n  return new Blob([u8arr], { type: mime })\n}\n"]},"metadata":{},"sourceType":"module"}