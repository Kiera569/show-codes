{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport debounce from 'lodash.debounce';\nimport omitBy from 'lodash.omitby';\nimport ms from 'ms';\nimport { fileToDataURL } from './util';\nimport firebase from './client';\nimport { DEFAULT_CODE, DEFAULT_SETTINGS } from './constants';\nexport const client = axios.create({\n  baseURL: `${process.env.NEXT_PUBLIC_API_URL || ''}/api`,\n  headers: {\n    Accept: 'application/json'\n  }\n});\n\nfunction tweet(content, encodedImage) {\n  const processedData = encodedImage.split(',')[1];\n  return client.post('/twitter', {\n    imageData: processedData,\n    altText: content\n  }).then(res => res.data.url).then(url => encodeURIComponent(`Created with @carbon_app ${url}`)).then(uri => `https://twitter.com/intent/tweet?text=${uri}`).then(openTwitterUrl).catch(checkIfRateLimited);\n}\n\nconst RATE_LIMIT_CODE = 420;\n\nfunction checkIfRateLimited(err) {\n  if (err.response.status === RATE_LIMIT_CODE) {\n    alert(\"Oh no! Looks like to many people are trying to tweet right now and we've been rate limited. Try again soon or save and upload manually!\");\n    return;\n  }\n\n  throw err;\n}\n\nfunction image(state) {\n  return client.post('/image', {\n    state\n  }).then(res => res.data);\n}\n\nfunction openTwitterUrl(twitterUrl) {\n  const width = 575;\n  const height = 400;\n  const left = (window.outerWidth - width) / 2;\n  const top = (window.outerHeight - height) / 2;\n  const opts = `status=1,width=${width},height=${height},top=${top},left=${left}`;\n  window.open(twitterUrl, '_blank', opts);\n}\n\nconst downloadThumbnailImage = img => {\n  return client.get(img.url.replace('http://', 'https://'), {\n    responseType: 'blob'\n  }).then(res => res.data).then(fileToDataURL).then(dataURL => Object.assign(img, {\n    dataURL\n  }));\n};\n\nconst unsplash = {\n  download(id) {\n    return client.get(`/unsplash/download/${id}`).then(res => res.data);\n  },\n\n  async random() {\n    const imageUrls = await client.get('/unsplash/random');\n    return Promise.all(imageUrls.data.map(downloadThumbnailImage));\n  }\n\n};\n\nfunction getSnippet(uid = '', {\n  host,\n  filename\n} = {}) {\n  return client.get(`/snippets/${uid}`, {\n    baseURL: host ? `https://${host}/api` : undefined,\n    params: {\n      filename\n    }\n  }).then(res => res.data).catch(e => {\n    console.error(e);\n    return null;\n  });\n}\n\nfunction listSnippets(page) {\n  // IDEA: move into axios interceptor\n  return firebase.auth().currentUser.getIdToken().then(authorization => client.get(`/snippets`, {\n    params: {\n      page\n    },\n    headers: {\n      authorization\n    }\n  }).then(res => res.data).catch(e => {\n    console.error(e);\n    throw e;\n  }));\n}\n\nfunction isNotDefaultSetting(v, k) {\n  return v === DEFAULT_SETTINGS[k] || !Object.prototype.hasOwnProperty.call(DEFAULT_SETTINGS, k);\n}\n\nfunction updateSnippet(uid, state) {\n  const sanitized = omitBy(state, isNotDefaultSetting);\n\n  const data = _objectSpread(_objectSpread({}, sanitized), {}, {\n    code: state.code != null ? state.code : DEFAULT_CODE\n  });\n\n  if (uid) {\n    return client.patch(`/snippets/${uid}`, data).then(res => res.data).catch(e => {\n      console.error(e);\n      return null;\n    });\n  }\n\n  return client.post(`/snippets`, data).then(res => res.data).catch(e => {\n    console.error(e);\n    return null;\n  });\n}\n\nfunction deleteSnippet(uid) {\n  return client.delete(`/snippets/${uid}`).then(res => res.data).catch(e => {\n    console.error(e);\n    return null;\n  });\n}\n\nconst createSnippet = debounce(data => updateSnippet(null, data), ms('5s'), {\n  leading: true,\n  trailing: false\n});\nexport default {\n  snippet: {\n    get: getSnippet,\n    list: listSnippets,\n    update: debounce(updateSnippet, ms('1s'), {\n      leading: true,\n      trailing: true\n    }),\n    create: createSnippet,\n    delete: id => deleteSnippet(id)\n  },\n  tweet: debounce(tweet, ms('5s'), {\n    leading: true,\n    trailing: false\n  }),\n  image: debounce(image, ms('5s'), {\n    leading: true,\n    trailing: false\n  }),\n  unsplash,\n  downloadThumbnailImage\n};","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/lib/api.js"],"names":["axios","debounce","omitBy","ms","fileToDataURL","firebase","DEFAULT_CODE","DEFAULT_SETTINGS","client","create","baseURL","process","env","NEXT_PUBLIC_API_URL","headers","Accept","tweet","content","encodedImage","processedData","split","post","imageData","altText","then","res","data","url","encodeURIComponent","uri","openTwitterUrl","catch","checkIfRateLimited","RATE_LIMIT_CODE","err","response","status","alert","image","state","twitterUrl","width","height","left","window","outerWidth","top","outerHeight","opts","open","downloadThumbnailImage","img","get","replace","responseType","dataURL","Object","assign","unsplash","download","id","random","imageUrls","Promise","all","map","getSnippet","uid","host","filename","undefined","params","e","console","error","listSnippets","page","auth","currentUser","getIdToken","authorization","isNotDefaultSetting","v","k","prototype","hasOwnProperty","call","updateSnippet","sanitized","code","patch","deleteSnippet","delete","createSnippet","leading","trailing","snippet","list","update"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport debounce from 'lodash.debounce'\nimport omitBy from 'lodash.omitby'\nimport ms from 'ms'\n\nimport { fileToDataURL } from './util'\nimport firebase from './client'\nimport { DEFAULT_CODE, DEFAULT_SETTINGS } from './constants'\n\nexport const client = axios.create({\n  baseURL: `${process.env.NEXT_PUBLIC_API_URL || ''}/api`,\n  headers: {\n    Accept: 'application/json',\n  },\n})\n\nfunction tweet(content, encodedImage) {\n  const processedData = encodedImage.split(',')[1]\n\n  return client\n    .post('/twitter', {\n      imageData: processedData,\n      altText: content,\n    })\n    .then(res => res.data.url)\n    .then(url => encodeURIComponent(`Created with @carbon_app ${url}`))\n    .then(uri => `https://twitter.com/intent/tweet?text=${uri}`)\n    .then(openTwitterUrl)\n    .catch(checkIfRateLimited)\n}\n\nconst RATE_LIMIT_CODE = 420\nfunction checkIfRateLimited(err) {\n  if (err.response.status === RATE_LIMIT_CODE) {\n    alert(\n      \"Oh no! Looks like to many people are trying to tweet right now and we've been rate limited. Try again soon or save and upload manually!\"\n    )\n    return\n  }\n\n  throw err\n}\n\nfunction image(state) {\n  return client.post('/image', { state }).then(res => res.data)\n}\n\nfunction openTwitterUrl(twitterUrl) {\n  const width = 575\n  const height = 400\n  const left = (window.outerWidth - width) / 2\n  const top = (window.outerHeight - height) / 2\n  const opts = `status=1,width=${width},height=${height},top=${top},left=${left}`\n\n  window.open(twitterUrl, '_blank', opts)\n}\n\nconst downloadThumbnailImage = img => {\n  return client\n    .get(img.url.replace('http://', 'https://'), { responseType: 'blob' })\n    .then(res => res.data)\n    .then(fileToDataURL)\n    .then(dataURL => Object.assign(img, { dataURL }))\n}\n\nconst unsplash = {\n  download(id) {\n    return client.get(`/unsplash/download/${id}`).then(res => res.data)\n  },\n  async random() {\n    const imageUrls = await client.get('/unsplash/random')\n    return Promise.all(imageUrls.data.map(downloadThumbnailImage))\n  },\n}\n\nfunction getSnippet(uid = '', { host, filename } = {}) {\n  return client\n    .get(`/snippets/${uid}`, {\n      baseURL: host ? `https://${host}/api` : undefined,\n      params: { filename },\n    })\n    .then(res => res.data)\n    .catch(e => {\n      console.error(e)\n      return null\n    })\n}\n\nfunction listSnippets(page) {\n  // IDEA: move into axios interceptor\n  return firebase\n    .auth()\n    .currentUser.getIdToken()\n    .then(authorization =>\n      client\n        .get(`/snippets`, {\n          params: {\n            page,\n          },\n          headers: {\n            authorization,\n          },\n        })\n        .then(res => res.data)\n        .catch(e => {\n          console.error(e)\n          throw e\n        })\n    )\n}\n\nfunction isNotDefaultSetting(v, k) {\n  return v === DEFAULT_SETTINGS[k] || !Object.prototype.hasOwnProperty.call(DEFAULT_SETTINGS, k)\n}\n\nfunction updateSnippet(uid, state) {\n  const sanitized = omitBy(state, isNotDefaultSetting)\n\n  const data = {\n    ...sanitized,\n    code: state.code != null ? state.code : DEFAULT_CODE,\n  }\n\n  if (uid) {\n    return client\n      .patch(`/snippets/${uid}`, data)\n      .then(res => res.data)\n      .catch(e => {\n        console.error(e)\n        return null\n      })\n  }\n  return client\n    .post(`/snippets`, data)\n    .then(res => res.data)\n    .catch(e => {\n      console.error(e)\n      return null\n    })\n}\n\nfunction deleteSnippet(uid) {\n  return client\n    .delete(`/snippets/${uid}`)\n    .then(res => res.data)\n    .catch(e => {\n      console.error(e)\n      return null\n    })\n}\n\nconst createSnippet = debounce(data => updateSnippet(null, data), ms('5s'), {\n  leading: true,\n  trailing: false,\n})\n\nexport default {\n  snippet: {\n    get: getSnippet,\n    list: listSnippets,\n    update: debounce(updateSnippet, ms('1s'), { leading: true, trailing: true }),\n    create: createSnippet,\n    delete: id => deleteSnippet(id),\n  },\n  tweet: debounce(tweet, ms('5s'), { leading: true, trailing: false }),\n  image: debounce(image, ms('5s'), { leading: true, trailing: false }),\n  unsplash,\n  downloadThumbnailImage,\n}\n"]},"metadata":{},"sourceType":"module"}