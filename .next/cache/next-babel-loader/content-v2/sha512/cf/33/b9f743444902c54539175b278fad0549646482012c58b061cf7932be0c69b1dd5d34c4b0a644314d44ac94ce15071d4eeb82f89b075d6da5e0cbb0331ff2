{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/limengyu/Desktop/private/code/project/show-codes/components/ConfirmButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Button from './Button';\nexport default function ConfirmButton(props) {\n  const [confirmed, setConfirmed] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({}, props), {}, {\n    onClick: e => {\n      if (confirmed) {\n        props.onClick(e);\n        setConfirmed(false);\n      } else {\n        setConfirmed(true);\n      }\n    },\n    onBlur: () => setConfirmed(false),\n    children: confirmed ? 'Are you sure?' : props.children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/limengyu/Desktop/private/code/project/show-codes/components/ConfirmButton.js"],"names":["React","Button","ConfirmButton","props","confirmed","setConfirmed","useState","e","onClick","children"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,KAAK,CAACM,QAAN,CAAe,KAAf,CAAlC;AACA,sBACE,QAAC,MAAD,kCACMH,KADN;AAEE,IAAA,OAAO,EAAEI,CAAC,IAAI;AACZ,UAAIH,SAAJ,EAAe;AACbD,QAAAA,KAAK,CAACK,OAAN,CAAcD,CAAd;AACAF,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHD,MAGO;AACLA,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KATH;AAUE,IAAA,MAAM,EAAE,MAAMA,YAAY,CAAC,KAAD,CAV5B;AAAA,cAYGD,SAAS,GAAG,eAAH,GAAqBD,KAAK,CAACM;AAZvC;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD","sourcesContent":["import React from 'react'\nimport Button from './Button'\n\nexport default function ConfirmButton(props) {\n  const [confirmed, setConfirmed] = React.useState(false)\n  return (\n    <Button\n      {...props}\n      onClick={e => {\n        if (confirmed) {\n          props.onClick(e)\n          setConfirmed(false)\n        } else {\n          setConfirmed(true)\n        }\n      }}\n      onBlur={() => setConfirmed(false)}\n    >\n      {confirmed ? 'Are you sure?' : props.children}\n    </Button>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}